//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DataTier {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsReports")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsReports : global::System.Data.DataSet {
        
        private InvoicesDataTable tableInvoices;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsReports() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsReports(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Invoices"] != null)) {
                    base.Tables.Add(new InvoicesDataTable(ds.Tables["Invoices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public InvoicesDataTable Invoices {
            get {
                return this.tableInvoices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsReports cln = ((dsReports)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Invoices"] != null)) {
                    base.Tables.Add(new InvoicesDataTable(ds.Tables["Invoices"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableInvoices = ((InvoicesDataTable)(base.Tables["Invoices"]));
            if ((initTable == true)) {
                if ((this.tableInvoices != null)) {
                    this.tableInvoices.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsReports";
            this.Prefix = "";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableInvoices = new InvoicesDataTable();
            base.Tables.Add(this.tableInvoices);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeInvoices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsReports ds = new dsReports();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void InvoicesRowChangeEventHandler(object sender, InvoicesRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class InvoicesDataTable : global::System.Data.TypedTableBase<InvoicesRow> {
            
            private global::System.Data.DataColumn columnInvoiceID;
            
            private global::System.Data.DataColumn columnInvoiceTypeID;
            
            private global::System.Data.DataColumn columnUtilityID;
            
            private global::System.Data.DataColumn columnSubInvTypeID;
            
            private global::System.Data.DataColumn columnInvoiceNo;
            
            private global::System.Data.DataColumn columnSequenceNo;
            
            private global::System.Data.DataColumn columnContractID;
            
            private global::System.Data.DataColumn columnContractRateID;
            
            private global::System.Data.DataColumn columnContractClosureID;
            
            private global::System.Data.DataColumn columnContract_RentSchemeID;
            
            private global::System.Data.DataColumn columnInvoiceDate;
            
            private global::System.Data.DataColumn columnProcessYear;
            
            private global::System.Data.DataColumn columnProcessMonth;
            
            private global::System.Data.DataColumn columnExtendedCustomerID;
            
            private global::System.Data.DataColumn columnCustomerID;
            
            private global::System.Data.DataColumn columnCustomerName;
            
            private global::System.Data.DataColumn columnCustomerAddress;
            
            private global::System.Data.DataColumn columnCustomerAddress2;
            
            private global::System.Data.DataColumn columnDateFrom;
            
            private global::System.Data.DataColumn columnDateTo;
            
            private global::System.Data.DataColumn columnIsProcessed;
            
            private global::System.Data.DataColumn columnIsConfirmed;
            
            private global::System.Data.DataColumn columnStartReading;
            
            private global::System.Data.DataColumn columnEndReading;
            
            private global::System.Data.DataColumn columnReset;
            
            private global::System.Data.DataColumn columnStartReading2;
            
            private global::System.Data.DataColumn columnEndReading2;
            
            private global::System.Data.DataColumn columnUtilityRateID;
            
            private global::System.Data.DataColumn columnUtilityUnitRate;
            
            private global::System.Data.DataColumn columnCompanyID;
            
            private global::System.Data.DataColumn columnLocationID;
            
            private global::System.Data.DataColumn columnNaration;
            
            private global::System.Data.DataColumn columnIsInvoiced;
            
            private global::System.Data.DataColumn columnShopID;
            
            private global::System.Data.DataColumn columnShopNo;
            
            private global::System.Data.DataColumn columnShopName;
            
            private global::System.Data.DataColumn columnIsTaxCustomer;
            
            private global::System.Data.DataColumn columnTaxRegNo;
            
            private global::System.Data.DataColumn columnRatio;
            
            private global::System.Data.DataColumn columnAreaInSqFt;
            
            private global::System.Data.DataColumn columnRentPerSqFt;
            
            private global::System.Data.DataColumn columnSCPerSqFt;
            
            private global::System.Data.DataColumn columnRentPerMonth;
            
            private global::System.Data.DataColumn columnSCPerMonth;
            
            private global::System.Data.DataColumn columnRentWIthSCPerSqFt;
            
            private global::System.Data.DataColumn columnRentWithSCPerMonth;
            
            private global::System.Data.DataColumn columnTotalAmount;
            
            private global::System.Data.DataColumn columnTotalTax;
            
            private global::System.Data.DataColumn columnOtherTax;
            
            private global::System.Data.DataColumn columnMandatoryTaxID;
            
            private global::System.Data.DataColumn columnMandatoryTaxRateID;
            
            private global::System.Data.DataColumn columnMandatoryTaxAmount;
            
            private global::System.Data.DataColumn columnTotalWithMandatoryTax;
            
            private global::System.Data.DataColumn columnTotalAmtWithTaxExcludedMandatoryTax;
            
            private global::System.Data.DataColumn columnTotalRentPerMonth;
            
            private global::System.Data.DataColumn columnLevelID;
            
            private global::System.Data.DataColumn columnIsModified;
            
            private global::System.Data.DataColumn columnModifiedDate;
            
            private global::System.Data.DataColumn columnIsPerDay;
            
            private global::System.Data.DataColumn columnNosDay;
            
            private global::System.Data.DataColumn columnMandatoryTaxCode;
            
            private global::System.Data.DataColumn columnOtherServiceID;
            
            private global::System.Data.DataColumn columnContractName;
            
            private global::System.Data.DataColumn columnSAP_CompanyCode;
            
            private global::System.Data.DataColumn columnSAP_PstnDateInDoc;
            
            private global::System.Data.DataColumn columnSAP_DocHeaderText;
            
            private global::System.Data.DataColumn columnSAP_DocType;
            
            private global::System.Data.DataColumn columnSAP_Text;
            
            private global::System.Data.DataColumn columnSAP_RefKey1;
            
            private global::System.Data.DataColumn columnSAP_RefKey2;
            
            private global::System.Data.DataColumn columnSAP_RefKey3;
            
            private global::System.Data.DataColumn columnSAP_Assignment;
            
            private global::System.Data.DataColumn columnSAP_PostingKey;
            
            private global::System.Data.DataColumn columnSAP_GLACC;
            
            private global::System.Data.DataColumn columnIs_SAPUploaded;
            
            private global::System.Data.DataColumn columnRentalDiscount;
            
            private global::System.Data.DataColumn columnSCDiscount;
            
            private global::System.Data.DataColumn columnIsProforma;
            
            private global::System.Data.DataColumn columnInvoiceState;
            
            private global::System.Data.DataColumn columnProfomaNo;
            
            private global::System.Data.DataColumn columnProfomaSequenceNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesDataTable() {
                this.TableName = "Invoices";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected InvoicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceIDColumn {
                get {
                    return this.columnInvoiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceTypeIDColumn {
                get {
                    return this.columnInvoiceTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityIDColumn {
                get {
                    return this.columnUtilityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SubInvTypeIDColumn {
                get {
                    return this.columnSubInvTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceNoColumn {
                get {
                    return this.columnInvoiceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SequenceNoColumn {
                get {
                    return this.columnSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractIDColumn {
                get {
                    return this.columnContractID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractRateIDColumn {
                get {
                    return this.columnContractRateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractClosureIDColumn {
                get {
                    return this.columnContractClosureID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Contract_RentSchemeIDColumn {
                get {
                    return this.columnContract_RentSchemeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceDateColumn {
                get {
                    return this.columnInvoiceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessYearColumn {
                get {
                    return this.columnProcessYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProcessMonthColumn {
                get {
                    return this.columnProcessMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExtendedCustomerIDColumn {
                get {
                    return this.columnExtendedCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerIDColumn {
                get {
                    return this.columnCustomerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerNameColumn {
                get {
                    return this.columnCustomerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerAddressColumn {
                get {
                    return this.columnCustomerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CustomerAddress2Column {
                get {
                    return this.columnCustomerAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFromColumn {
                get {
                    return this.columnDateFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateToColumn {
                get {
                    return this.columnDateTo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsProcessedColumn {
                get {
                    return this.columnIsProcessed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsConfirmedColumn {
                get {
                    return this.columnIsConfirmed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartReadingColumn {
                get {
                    return this.columnStartReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndReadingColumn {
                get {
                    return this.columnEndReading;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ResetColumn {
                get {
                    return this.columnReset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StartReading2Column {
                get {
                    return this.columnStartReading2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EndReading2Column {
                get {
                    return this.columnEndReading2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityRateIDColumn {
                get {
                    return this.columnUtilityRateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UtilityUnitRateColumn {
                get {
                    return this.columnUtilityUnitRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CompanyIDColumn {
                get {
                    return this.columnCompanyID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocationIDColumn {
                get {
                    return this.columnLocationID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NarationColumn {
                get {
                    return this.columnNaration;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsInvoicedColumn {
                get {
                    return this.columnIsInvoiced;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShopIDColumn {
                get {
                    return this.columnShopID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShopNoColumn {
                get {
                    return this.columnShopNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShopNameColumn {
                get {
                    return this.columnShopName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTaxCustomerColumn {
                get {
                    return this.columnIsTaxCustomer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TaxRegNoColumn {
                get {
                    return this.columnTaxRegNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RatioColumn {
                get {
                    return this.columnRatio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaInSqFtColumn {
                get {
                    return this.columnAreaInSqFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentPerSqFtColumn {
                get {
                    return this.columnRentPerSqFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCPerSqFtColumn {
                get {
                    return this.columnSCPerSqFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentPerMonthColumn {
                get {
                    return this.columnRentPerMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCPerMonthColumn {
                get {
                    return this.columnSCPerMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentWIthSCPerSqFtColumn {
                get {
                    return this.columnRentWIthSCPerSqFt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentWithSCPerMonthColumn {
                get {
                    return this.columnRentWithSCPerMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmountColumn {
                get {
                    return this.columnTotalAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalTaxColumn {
                get {
                    return this.columnTotalTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherTaxColumn {
                get {
                    return this.columnOtherTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MandatoryTaxIDColumn {
                get {
                    return this.columnMandatoryTaxID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MandatoryTaxRateIDColumn {
                get {
                    return this.columnMandatoryTaxRateID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MandatoryTaxAmountColumn {
                get {
                    return this.columnMandatoryTaxAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalWithMandatoryTaxColumn {
                get {
                    return this.columnTotalWithMandatoryTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalAmtWithTaxExcludedMandatoryTaxColumn {
                get {
                    return this.columnTotalAmtWithTaxExcludedMandatoryTax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalRentPerMonthColumn {
                get {
                    return this.columnTotalRentPerMonth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LevelIDColumn {
                get {
                    return this.columnLevelID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsModifiedColumn {
                get {
                    return this.columnIsModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedDateColumn {
                get {
                    return this.columnModifiedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsPerDayColumn {
                get {
                    return this.columnIsPerDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NosDayColumn {
                get {
                    return this.columnNosDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MandatoryTaxCodeColumn {
                get {
                    return this.columnMandatoryTaxCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OtherServiceIDColumn {
                get {
                    return this.columnOtherServiceID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContractNameColumn {
                get {
                    return this.columnContractName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_CompanyCodeColumn {
                get {
                    return this.columnSAP_CompanyCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_PstnDateInDocColumn {
                get {
                    return this.columnSAP_PstnDateInDoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_DocHeaderTextColumn {
                get {
                    return this.columnSAP_DocHeaderText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_DocTypeColumn {
                get {
                    return this.columnSAP_DocType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_TextColumn {
                get {
                    return this.columnSAP_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_RefKey1Column {
                get {
                    return this.columnSAP_RefKey1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_RefKey2Column {
                get {
                    return this.columnSAP_RefKey2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_RefKey3Column {
                get {
                    return this.columnSAP_RefKey3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_AssignmentColumn {
                get {
                    return this.columnSAP_Assignment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_PostingKeyColumn {
                get {
                    return this.columnSAP_PostingKey;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SAP_GLACCColumn {
                get {
                    return this.columnSAP_GLACC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Is_SAPUploadedColumn {
                get {
                    return this.columnIs_SAPUploaded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RentalDiscountColumn {
                get {
                    return this.columnRentalDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SCDiscountColumn {
                get {
                    return this.columnSCDiscount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsProformaColumn {
                get {
                    return this.columnIsProforma;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InvoiceStateColumn {
                get {
                    return this.columnInvoiceState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfomaNoColumn {
                get {
                    return this.columnProfomaNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfomaSequenceNoColumn {
                get {
                    return this.columnProfomaSequenceNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRow this[int index] {
                get {
                    return ((InvoicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoicesRowChangeEventHandler InvoicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoicesRowChangeEventHandler InvoicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoicesRowChangeEventHandler InvoicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event InvoicesRowChangeEventHandler InvoicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddInvoicesRow(InvoicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRow AddInvoicesRow(
                        int InvoiceTypeID, 
                        int UtilityID, 
                        int SubInvTypeID, 
                        string InvoiceNo, 
                        int SequenceNo, 
                        int ContractID, 
                        int ContractRateID, 
                        int ContractClosureID, 
                        int Contract_RentSchemeID, 
                        System.DateTime InvoiceDate, 
                        int ProcessYear, 
                        int ProcessMonth, 
                        int ExtendedCustomerID, 
                        int CustomerID, 
                        string CustomerName, 
                        string CustomerAddress, 
                        string CustomerAddress2, 
                        System.DateTime DateFrom, 
                        System.DateTime DateTo, 
                        bool IsProcessed, 
                        bool IsConfirmed, 
                        decimal StartReading, 
                        decimal EndReading, 
                        bool Reset, 
                        decimal StartReading2, 
                        decimal EndReading2, 
                        int UtilityRateID, 
                        decimal UtilityUnitRate, 
                        int CompanyID, 
                        int LocationID, 
                        string Naration, 
                        bool IsInvoiced, 
                        int ShopID, 
                        string ShopNo, 
                        string ShopName, 
                        bool IsTaxCustomer, 
                        string TaxRegNo, 
                        decimal Ratio, 
                        decimal AreaInSqFt, 
                        decimal RentPerSqFt, 
                        decimal SCPerSqFt, 
                        decimal RentPerMonth, 
                        decimal SCPerMonth, 
                        decimal RentWIthSCPerSqFt, 
                        decimal RentWithSCPerMonth, 
                        decimal TotalAmount, 
                        decimal TotalTax, 
                        decimal OtherTax, 
                        int MandatoryTaxID, 
                        int MandatoryTaxRateID, 
                        decimal MandatoryTaxAmount, 
                        decimal TotalWithMandatoryTax, 
                        decimal TotalAmtWithTaxExcludedMandatoryTax, 
                        decimal TotalRentPerMonth, 
                        int LevelID, 
                        bool IsModified, 
                        System.DateTime ModifiedDate, 
                        bool IsPerDay, 
                        int NosDay, 
                        string MandatoryTaxCode, 
                        int OtherServiceID, 
                        string ContractName, 
                        string SAP_CompanyCode, 
                        System.DateTime SAP_PstnDateInDoc, 
                        string SAP_DocHeaderText, 
                        string SAP_DocType, 
                        string SAP_Text, 
                        string SAP_RefKey1, 
                        string SAP_RefKey2, 
                        string SAP_RefKey3, 
                        string SAP_Assignment, 
                        string SAP_PostingKey, 
                        string SAP_GLACC, 
                        bool Is_SAPUploaded, 
                        decimal RentalDiscount, 
                        decimal SCDiscount, 
                        bool IsProforma, 
                        int InvoiceState, 
                        string ProfomaNo, 
                        int ProfomaSequenceNo) {
                InvoicesRow rowInvoicesRow = ((InvoicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        InvoiceTypeID,
                        UtilityID,
                        SubInvTypeID,
                        InvoiceNo,
                        SequenceNo,
                        ContractID,
                        ContractRateID,
                        ContractClosureID,
                        Contract_RentSchemeID,
                        InvoiceDate,
                        ProcessYear,
                        ProcessMonth,
                        ExtendedCustomerID,
                        CustomerID,
                        CustomerName,
                        CustomerAddress,
                        CustomerAddress2,
                        DateFrom,
                        DateTo,
                        IsProcessed,
                        IsConfirmed,
                        StartReading,
                        EndReading,
                        Reset,
                        StartReading2,
                        EndReading2,
                        UtilityRateID,
                        UtilityUnitRate,
                        CompanyID,
                        LocationID,
                        Naration,
                        IsInvoiced,
                        ShopID,
                        ShopNo,
                        ShopName,
                        IsTaxCustomer,
                        TaxRegNo,
                        Ratio,
                        AreaInSqFt,
                        RentPerSqFt,
                        SCPerSqFt,
                        RentPerMonth,
                        SCPerMonth,
                        RentWIthSCPerSqFt,
                        RentWithSCPerMonth,
                        TotalAmount,
                        TotalTax,
                        OtherTax,
                        MandatoryTaxID,
                        MandatoryTaxRateID,
                        MandatoryTaxAmount,
                        TotalWithMandatoryTax,
                        TotalAmtWithTaxExcludedMandatoryTax,
                        TotalRentPerMonth,
                        LevelID,
                        IsModified,
                        ModifiedDate,
                        IsPerDay,
                        NosDay,
                        MandatoryTaxCode,
                        OtherServiceID,
                        ContractName,
                        SAP_CompanyCode,
                        SAP_PstnDateInDoc,
                        SAP_DocHeaderText,
                        SAP_DocType,
                        SAP_Text,
                        SAP_RefKey1,
                        SAP_RefKey2,
                        SAP_RefKey3,
                        SAP_Assignment,
                        SAP_PostingKey,
                        SAP_GLACC,
                        Is_SAPUploaded,
                        RentalDiscount,
                        SCDiscount,
                        IsProforma,
                        InvoiceState,
                        ProfomaNo,
                        ProfomaSequenceNo};
                rowInvoicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowInvoicesRow);
                return rowInvoicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRow FindByInvoiceID(int InvoiceID) {
                return ((InvoicesRow)(this.Rows.Find(new object[] {
                            InvoiceID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                InvoicesDataTable cln = ((InvoicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new InvoicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnInvoiceID = base.Columns["InvoiceID"];
                this.columnInvoiceTypeID = base.Columns["InvoiceTypeID"];
                this.columnUtilityID = base.Columns["UtilityID"];
                this.columnSubInvTypeID = base.Columns["SubInvTypeID"];
                this.columnInvoiceNo = base.Columns["InvoiceNo"];
                this.columnSequenceNo = base.Columns["SequenceNo"];
                this.columnContractID = base.Columns["ContractID"];
                this.columnContractRateID = base.Columns["ContractRateID"];
                this.columnContractClosureID = base.Columns["ContractClosureID"];
                this.columnContract_RentSchemeID = base.Columns["Contract_RentSchemeID"];
                this.columnInvoiceDate = base.Columns["InvoiceDate"];
                this.columnProcessYear = base.Columns["ProcessYear"];
                this.columnProcessMonth = base.Columns["ProcessMonth"];
                this.columnExtendedCustomerID = base.Columns["ExtendedCustomerID"];
                this.columnCustomerID = base.Columns["CustomerID"];
                this.columnCustomerName = base.Columns["CustomerName"];
                this.columnCustomerAddress = base.Columns["CustomerAddress"];
                this.columnCustomerAddress2 = base.Columns["CustomerAddress2"];
                this.columnDateFrom = base.Columns["DateFrom"];
                this.columnDateTo = base.Columns["DateTo"];
                this.columnIsProcessed = base.Columns["IsProcessed"];
                this.columnIsConfirmed = base.Columns["IsConfirmed"];
                this.columnStartReading = base.Columns["StartReading"];
                this.columnEndReading = base.Columns["EndReading"];
                this.columnReset = base.Columns["Reset"];
                this.columnStartReading2 = base.Columns["StartReading2"];
                this.columnEndReading2 = base.Columns["EndReading2"];
                this.columnUtilityRateID = base.Columns["UtilityRateID"];
                this.columnUtilityUnitRate = base.Columns["UtilityUnitRate"];
                this.columnCompanyID = base.Columns["CompanyID"];
                this.columnLocationID = base.Columns["LocationID"];
                this.columnNaration = base.Columns["Naration"];
                this.columnIsInvoiced = base.Columns["IsInvoiced"];
                this.columnShopID = base.Columns["ShopID"];
                this.columnShopNo = base.Columns["ShopNo"];
                this.columnShopName = base.Columns["ShopName"];
                this.columnIsTaxCustomer = base.Columns["IsTaxCustomer"];
                this.columnTaxRegNo = base.Columns["TaxRegNo"];
                this.columnRatio = base.Columns["Ratio"];
                this.columnAreaInSqFt = base.Columns["AreaInSqFt"];
                this.columnRentPerSqFt = base.Columns["RentPerSqFt"];
                this.columnSCPerSqFt = base.Columns["SCPerSqFt"];
                this.columnRentPerMonth = base.Columns["RentPerMonth"];
                this.columnSCPerMonth = base.Columns["SCPerMonth"];
                this.columnRentWIthSCPerSqFt = base.Columns["RentWIthSCPerSqFt"];
                this.columnRentWithSCPerMonth = base.Columns["RentWithSCPerMonth"];
                this.columnTotalAmount = base.Columns["TotalAmount"];
                this.columnTotalTax = base.Columns["TotalTax"];
                this.columnOtherTax = base.Columns["OtherTax"];
                this.columnMandatoryTaxID = base.Columns["MandatoryTaxID"];
                this.columnMandatoryTaxRateID = base.Columns["MandatoryTaxRateID"];
                this.columnMandatoryTaxAmount = base.Columns["MandatoryTaxAmount"];
                this.columnTotalWithMandatoryTax = base.Columns["TotalWithMandatoryTax"];
                this.columnTotalAmtWithTaxExcludedMandatoryTax = base.Columns["TotalAmtWithTaxExcludedMandatoryTax"];
                this.columnTotalRentPerMonth = base.Columns["TotalRentPerMonth"];
                this.columnLevelID = base.Columns["LevelID"];
                this.columnIsModified = base.Columns["IsModified"];
                this.columnModifiedDate = base.Columns["ModifiedDate"];
                this.columnIsPerDay = base.Columns["IsPerDay"];
                this.columnNosDay = base.Columns["NosDay"];
                this.columnMandatoryTaxCode = base.Columns["MandatoryTaxCode"];
                this.columnOtherServiceID = base.Columns["OtherServiceID"];
                this.columnContractName = base.Columns["ContractName"];
                this.columnSAP_CompanyCode = base.Columns["SAP_CompanyCode"];
                this.columnSAP_PstnDateInDoc = base.Columns["SAP_PstnDateInDoc"];
                this.columnSAP_DocHeaderText = base.Columns["SAP_DocHeaderText"];
                this.columnSAP_DocType = base.Columns["SAP_DocType"];
                this.columnSAP_Text = base.Columns["SAP_Text"];
                this.columnSAP_RefKey1 = base.Columns["SAP_RefKey1"];
                this.columnSAP_RefKey2 = base.Columns["SAP_RefKey2"];
                this.columnSAP_RefKey3 = base.Columns["SAP_RefKey3"];
                this.columnSAP_Assignment = base.Columns["SAP_Assignment"];
                this.columnSAP_PostingKey = base.Columns["SAP_PostingKey"];
                this.columnSAP_GLACC = base.Columns["SAP_GLACC"];
                this.columnIs_SAPUploaded = base.Columns["Is_SAPUploaded"];
                this.columnRentalDiscount = base.Columns["RentalDiscount"];
                this.columnSCDiscount = base.Columns["SCDiscount"];
                this.columnIsProforma = base.Columns["IsProforma"];
                this.columnInvoiceState = base.Columns["InvoiceState"];
                this.columnProfomaNo = base.Columns["ProfomaNo"];
                this.columnProfomaSequenceNo = base.Columns["ProfomaSequenceNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnInvoiceID = new global::System.Data.DataColumn("InvoiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceID);
                this.columnInvoiceTypeID = new global::System.Data.DataColumn("InvoiceTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceTypeID);
                this.columnUtilityID = new global::System.Data.DataColumn("UtilityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityID);
                this.columnSubInvTypeID = new global::System.Data.DataColumn("SubInvTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubInvTypeID);
                this.columnInvoiceNo = new global::System.Data.DataColumn("InvoiceNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceNo);
                this.columnSequenceNo = new global::System.Data.DataColumn("SequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSequenceNo);
                this.columnContractID = new global::System.Data.DataColumn("ContractID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractID);
                this.columnContractRateID = new global::System.Data.DataColumn("ContractRateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractRateID);
                this.columnContractClosureID = new global::System.Data.DataColumn("ContractClosureID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractClosureID);
                this.columnContract_RentSchemeID = new global::System.Data.DataColumn("Contract_RentSchemeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContract_RentSchemeID);
                this.columnInvoiceDate = new global::System.Data.DataColumn("InvoiceDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceDate);
                this.columnProcessYear = new global::System.Data.DataColumn("ProcessYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessYear);
                this.columnProcessMonth = new global::System.Data.DataColumn("ProcessMonth", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProcessMonth);
                this.columnExtendedCustomerID = new global::System.Data.DataColumn("ExtendedCustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExtendedCustomerID);
                this.columnCustomerID = new global::System.Data.DataColumn("CustomerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerID);
                this.columnCustomerName = new global::System.Data.DataColumn("CustomerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerName);
                this.columnCustomerAddress = new global::System.Data.DataColumn("CustomerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress);
                this.columnCustomerAddress2 = new global::System.Data.DataColumn("CustomerAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCustomerAddress2);
                this.columnDateFrom = new global::System.Data.DataColumn("DateFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFrom);
                this.columnDateTo = new global::System.Data.DataColumn("DateTo", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateTo);
                this.columnIsProcessed = new global::System.Data.DataColumn("IsProcessed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsProcessed);
                this.columnIsConfirmed = new global::System.Data.DataColumn("IsConfirmed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsConfirmed);
                this.columnStartReading = new global::System.Data.DataColumn("StartReading", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartReading);
                this.columnEndReading = new global::System.Data.DataColumn("EndReading", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndReading);
                this.columnReset = new global::System.Data.DataColumn("Reset", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReset);
                this.columnStartReading2 = new global::System.Data.DataColumn("StartReading2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartReading2);
                this.columnEndReading2 = new global::System.Data.DataColumn("EndReading2", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndReading2);
                this.columnUtilityRateID = new global::System.Data.DataColumn("UtilityRateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityRateID);
                this.columnUtilityUnitRate = new global::System.Data.DataColumn("UtilityUnitRate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUtilityUnitRate);
                this.columnCompanyID = new global::System.Data.DataColumn("CompanyID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompanyID);
                this.columnLocationID = new global::System.Data.DataColumn("LocationID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationID);
                this.columnNaration = new global::System.Data.DataColumn("Naration", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNaration);
                this.columnIsInvoiced = new global::System.Data.DataColumn("IsInvoiced", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsInvoiced);
                this.columnShopID = new global::System.Data.DataColumn("ShopID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopID);
                this.columnShopNo = new global::System.Data.DataColumn("ShopNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopNo);
                this.columnShopName = new global::System.Data.DataColumn("ShopName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShopName);
                this.columnIsTaxCustomer = new global::System.Data.DataColumn("IsTaxCustomer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTaxCustomer);
                this.columnTaxRegNo = new global::System.Data.DataColumn("TaxRegNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxRegNo);
                this.columnRatio = new global::System.Data.DataColumn("Ratio", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRatio);
                this.columnAreaInSqFt = new global::System.Data.DataColumn("AreaInSqFt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAreaInSqFt);
                this.columnRentPerSqFt = new global::System.Data.DataColumn("RentPerSqFt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentPerSqFt);
                this.columnSCPerSqFt = new global::System.Data.DataColumn("SCPerSqFt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCPerSqFt);
                this.columnRentPerMonth = new global::System.Data.DataColumn("RentPerMonth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentPerMonth);
                this.columnSCPerMonth = new global::System.Data.DataColumn("SCPerMonth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCPerMonth);
                this.columnRentWIthSCPerSqFt = new global::System.Data.DataColumn("RentWIthSCPerSqFt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentWIthSCPerSqFt);
                this.columnRentWithSCPerMonth = new global::System.Data.DataColumn("RentWithSCPerMonth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentWithSCPerMonth);
                this.columnTotalAmount = new global::System.Data.DataColumn("TotalAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmount);
                this.columnTotalTax = new global::System.Data.DataColumn("TotalTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalTax);
                this.columnOtherTax = new global::System.Data.DataColumn("OtherTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherTax);
                this.columnMandatoryTaxID = new global::System.Data.DataColumn("MandatoryTaxID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMandatoryTaxID);
                this.columnMandatoryTaxRateID = new global::System.Data.DataColumn("MandatoryTaxRateID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMandatoryTaxRateID);
                this.columnMandatoryTaxAmount = new global::System.Data.DataColumn("MandatoryTaxAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMandatoryTaxAmount);
                this.columnTotalWithMandatoryTax = new global::System.Data.DataColumn("TotalWithMandatoryTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalWithMandatoryTax);
                this.columnTotalAmtWithTaxExcludedMandatoryTax = new global::System.Data.DataColumn("TotalAmtWithTaxExcludedMandatoryTax", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalAmtWithTaxExcludedMandatoryTax);
                this.columnTotalRentPerMonth = new global::System.Data.DataColumn("TotalRentPerMonth", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalRentPerMonth);
                this.columnLevelID = new global::System.Data.DataColumn("LevelID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLevelID);
                this.columnIsModified = new global::System.Data.DataColumn("IsModified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsModified);
                this.columnModifiedDate = new global::System.Data.DataColumn("ModifiedDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModifiedDate);
                this.columnIsPerDay = new global::System.Data.DataColumn("IsPerDay", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsPerDay);
                this.columnNosDay = new global::System.Data.DataColumn("NosDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNosDay);
                this.columnMandatoryTaxCode = new global::System.Data.DataColumn("MandatoryTaxCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMandatoryTaxCode);
                this.columnOtherServiceID = new global::System.Data.DataColumn("OtherServiceID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOtherServiceID);
                this.columnContractName = new global::System.Data.DataColumn("ContractName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContractName);
                this.columnSAP_CompanyCode = new global::System.Data.DataColumn("SAP_CompanyCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_CompanyCode);
                this.columnSAP_PstnDateInDoc = new global::System.Data.DataColumn("SAP_PstnDateInDoc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_PstnDateInDoc);
                this.columnSAP_DocHeaderText = new global::System.Data.DataColumn("SAP_DocHeaderText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_DocHeaderText);
                this.columnSAP_DocType = new global::System.Data.DataColumn("SAP_DocType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_DocType);
                this.columnSAP_Text = new global::System.Data.DataColumn("SAP_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_Text);
                this.columnSAP_RefKey1 = new global::System.Data.DataColumn("SAP_RefKey1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_RefKey1);
                this.columnSAP_RefKey2 = new global::System.Data.DataColumn("SAP_RefKey2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_RefKey2);
                this.columnSAP_RefKey3 = new global::System.Data.DataColumn("SAP_RefKey3", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_RefKey3);
                this.columnSAP_Assignment = new global::System.Data.DataColumn("SAP_Assignment", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_Assignment);
                this.columnSAP_PostingKey = new global::System.Data.DataColumn("SAP_PostingKey", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_PostingKey);
                this.columnSAP_GLACC = new global::System.Data.DataColumn("SAP_GLACC", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSAP_GLACC);
                this.columnIs_SAPUploaded = new global::System.Data.DataColumn("Is_SAPUploaded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_SAPUploaded);
                this.columnRentalDiscount = new global::System.Data.DataColumn("RentalDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRentalDiscount);
                this.columnSCDiscount = new global::System.Data.DataColumn("SCDiscount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSCDiscount);
                this.columnIsProforma = new global::System.Data.DataColumn("IsProforma", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsProforma);
                this.columnInvoiceState = new global::System.Data.DataColumn("InvoiceState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvoiceState);
                this.columnProfomaNo = new global::System.Data.DataColumn("ProfomaNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfomaNo);
                this.columnProfomaSequenceNo = new global::System.Data.DataColumn("ProfomaSequenceNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfomaSequenceNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvoiceID}, true));
                this.columnInvoiceID.AutoIncrement = true;
                this.columnInvoiceID.AllowDBNull = false;
                this.columnInvoiceID.ReadOnly = true;
                this.columnInvoiceID.Unique = true;
                this.columnInvoiceTypeID.AllowDBNull = false;
                this.columnUtilityID.AllowDBNull = false;
                this.columnSubInvTypeID.AllowDBNull = false;
                this.columnInvoiceNo.AllowDBNull = false;
                this.columnInvoiceNo.MaxLength = 10;
                this.columnSequenceNo.AllowDBNull = false;
                this.columnContractID.AllowDBNull = false;
                this.columnContractRateID.AllowDBNull = false;
                this.columnContractClosureID.AllowDBNull = false;
                this.columnContract_RentSchemeID.AllowDBNull = false;
                this.columnProcessYear.AllowDBNull = false;
                this.columnProcessMonth.AllowDBNull = false;
                this.columnExtendedCustomerID.AllowDBNull = false;
                this.columnCustomerID.AllowDBNull = false;
                this.columnCustomerName.AllowDBNull = false;
                this.columnCustomerName.MaxLength = 100;
                this.columnCustomerAddress.MaxLength = 2147483647;
                this.columnCustomerAddress2.MaxLength = 2147483647;
                this.columnIsProcessed.AllowDBNull = false;
                this.columnIsConfirmed.AllowDBNull = false;
                this.columnStartReading.AllowDBNull = false;
                this.columnEndReading.AllowDBNull = false;
                this.columnReset.AllowDBNull = false;
                this.columnStartReading2.AllowDBNull = false;
                this.columnEndReading2.AllowDBNull = false;
                this.columnUtilityRateID.AllowDBNull = false;
                this.columnUtilityUnitRate.AllowDBNull = false;
                this.columnCompanyID.AllowDBNull = false;
                this.columnLocationID.AllowDBNull = false;
                this.columnNaration.AllowDBNull = false;
                this.columnNaration.MaxLength = 2147483647;
                this.columnIsInvoiced.AllowDBNull = false;
                this.columnShopID.AllowDBNull = false;
                this.columnShopNo.AllowDBNull = false;
                this.columnShopNo.MaxLength = 50;
                this.columnShopName.AllowDBNull = false;
                this.columnShopName.MaxLength = 100;
                this.columnIsTaxCustomer.AllowDBNull = false;
                this.columnTaxRegNo.AllowDBNull = false;
                this.columnTaxRegNo.MaxLength = 2147483647;
                this.columnRatio.AllowDBNull = false;
                this.columnAreaInSqFt.AllowDBNull = false;
                this.columnRentPerSqFt.AllowDBNull = false;
                this.columnSCPerSqFt.AllowDBNull = false;
                this.columnRentPerMonth.AllowDBNull = false;
                this.columnSCPerMonth.AllowDBNull = false;
                this.columnRentWIthSCPerSqFt.AllowDBNull = false;
                this.columnRentWithSCPerMonth.AllowDBNull = false;
                this.columnTotalAmount.AllowDBNull = false;
                this.columnTotalTax.AllowDBNull = false;
                this.columnOtherTax.AllowDBNull = false;
                this.columnMandatoryTaxID.AllowDBNull = false;
                this.columnMandatoryTaxRateID.AllowDBNull = false;
                this.columnMandatoryTaxAmount.AllowDBNull = false;
                this.columnTotalWithMandatoryTax.AllowDBNull = false;
                this.columnTotalAmtWithTaxExcludedMandatoryTax.AllowDBNull = false;
                this.columnTotalRentPerMonth.AllowDBNull = false;
                this.columnLevelID.AllowDBNull = false;
                this.columnIsModified.AllowDBNull = false;
                this.columnModifiedDate.AllowDBNull = false;
                this.columnIsPerDay.AllowDBNull = false;
                this.columnNosDay.AllowDBNull = false;
                this.columnMandatoryTaxCode.AllowDBNull = false;
                this.columnMandatoryTaxCode.MaxLength = 10;
                this.columnOtherServiceID.AllowDBNull = false;
                this.columnContractName.MaxLength = 50;
                this.columnSAP_CompanyCode.AllowDBNull = false;
                this.columnSAP_CompanyCode.MaxLength = 50;
                this.columnSAP_DocHeaderText.AllowDBNull = false;
                this.columnSAP_DocHeaderText.MaxLength = 50;
                this.columnSAP_DocType.AllowDBNull = false;
                this.columnSAP_DocType.MaxLength = 50;
                this.columnSAP_Text.AllowDBNull = false;
                this.columnSAP_Text.MaxLength = 50;
                this.columnSAP_RefKey1.AllowDBNull = false;
                this.columnSAP_RefKey1.MaxLength = 50;
                this.columnSAP_RefKey2.AllowDBNull = false;
                this.columnSAP_RefKey2.MaxLength = 50;
                this.columnSAP_RefKey3.AllowDBNull = false;
                this.columnSAP_RefKey3.MaxLength = 50;
                this.columnSAP_Assignment.AllowDBNull = false;
                this.columnSAP_Assignment.MaxLength = 50;
                this.columnSAP_PostingKey.AllowDBNull = false;
                this.columnSAP_PostingKey.MaxLength = 50;
                this.columnSAP_GLACC.AllowDBNull = false;
                this.columnSAP_GLACC.MaxLength = 50;
                this.columnIs_SAPUploaded.AllowDBNull = false;
                this.columnProfomaNo.MaxLength = 12;
                this.columnProfomaSequenceNo.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRow NewInvoicesRow() {
                return ((InvoicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new InvoicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(InvoicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.InvoicesRowChanged != null)) {
                    this.InvoicesRowChanged(this, new InvoicesRowChangeEvent(((InvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.InvoicesRowChanging != null)) {
                    this.InvoicesRowChanging(this, new InvoicesRowChangeEvent(((InvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.InvoicesRowDeleted != null)) {
                    this.InvoicesRowDeleted(this, new InvoicesRowChangeEvent(((InvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.InvoicesRowDeleting != null)) {
                    this.InvoicesRowDeleting(this, new InvoicesRowChangeEvent(((InvoicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveInvoicesRow(InvoicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsReports ds = new dsReports();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "InvoicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class InvoicesRow : global::System.Data.DataRow {
            
            private InvoicesDataTable tableInvoices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal InvoicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableInvoices = ((InvoicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceID {
                get {
                    return ((int)(this[this.tableInvoices.InvoiceIDColumn]));
                }
                set {
                    this[this.tableInvoices.InvoiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceTypeID {
                get {
                    return ((int)(this[this.tableInvoices.InvoiceTypeIDColumn]));
                }
                set {
                    this[this.tableInvoices.InvoiceTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UtilityID {
                get {
                    return ((int)(this[this.tableInvoices.UtilityIDColumn]));
                }
                set {
                    this[this.tableInvoices.UtilityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SubInvTypeID {
                get {
                    return ((int)(this[this.tableInvoices.SubInvTypeIDColumn]));
                }
                set {
                    this[this.tableInvoices.SubInvTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InvoiceNo {
                get {
                    return ((string)(this[this.tableInvoices.InvoiceNoColumn]));
                }
                set {
                    this[this.tableInvoices.InvoiceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SequenceNo {
                get {
                    return ((int)(this[this.tableInvoices.SequenceNoColumn]));
                }
                set {
                    this[this.tableInvoices.SequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractID {
                get {
                    return ((int)(this[this.tableInvoices.ContractIDColumn]));
                }
                set {
                    this[this.tableInvoices.ContractIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractRateID {
                get {
                    return ((int)(this[this.tableInvoices.ContractRateIDColumn]));
                }
                set {
                    this[this.tableInvoices.ContractRateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ContractClosureID {
                get {
                    return ((int)(this[this.tableInvoices.ContractClosureIDColumn]));
                }
                set {
                    this[this.tableInvoices.ContractClosureIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Contract_RentSchemeID {
                get {
                    return ((int)(this[this.tableInvoices.Contract_RentSchemeIDColumn]));
                }
                set {
                    this[this.tableInvoices.Contract_RentSchemeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime InvoiceDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoices.InvoiceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceDate\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.InvoiceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProcessYear {
                get {
                    return ((int)(this[this.tableInvoices.ProcessYearColumn]));
                }
                set {
                    this[this.tableInvoices.ProcessYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProcessMonth {
                get {
                    return ((int)(this[this.tableInvoices.ProcessMonthColumn]));
                }
                set {
                    this[this.tableInvoices.ProcessMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExtendedCustomerID {
                get {
                    return ((int)(this[this.tableInvoices.ExtendedCustomerIDColumn]));
                }
                set {
                    this[this.tableInvoices.ExtendedCustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CustomerID {
                get {
                    return ((int)(this[this.tableInvoices.CustomerIDColumn]));
                }
                set {
                    this[this.tableInvoices.CustomerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerName {
                get {
                    return ((string)(this[this.tableInvoices.CustomerNameColumn]));
                }
                set {
                    this[this.tableInvoices.CustomerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerAddress {
                get {
                    try {
                        return ((string)(this[this.tableInvoices.CustomerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddress\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.CustomerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CustomerAddress2 {
                get {
                    try {
                        return ((string)(this[this.tableInvoices.CustomerAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CustomerAddress2\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.CustomerAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoices.DateFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateFrom\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.DateFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateTo {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoices.DateToColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DateTo\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.DateToColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProcessed {
                get {
                    return ((bool)(this[this.tableInvoices.IsProcessedColumn]));
                }
                set {
                    this[this.tableInvoices.IsProcessedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConfirmed {
                get {
                    return ((bool)(this[this.tableInvoices.IsConfirmedColumn]));
                }
                set {
                    this[this.tableInvoices.IsConfirmedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StartReading {
                get {
                    return ((decimal)(this[this.tableInvoices.StartReadingColumn]));
                }
                set {
                    this[this.tableInvoices.StartReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EndReading {
                get {
                    return ((decimal)(this[this.tableInvoices.EndReadingColumn]));
                }
                set {
                    this[this.tableInvoices.EndReadingColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Reset {
                get {
                    return ((bool)(this[this.tableInvoices.ResetColumn]));
                }
                set {
                    this[this.tableInvoices.ResetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal StartReading2 {
                get {
                    return ((decimal)(this[this.tableInvoices.StartReading2Column]));
                }
                set {
                    this[this.tableInvoices.StartReading2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal EndReading2 {
                get {
                    return ((decimal)(this[this.tableInvoices.EndReading2Column]));
                }
                set {
                    this[this.tableInvoices.EndReading2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int UtilityRateID {
                get {
                    return ((int)(this[this.tableInvoices.UtilityRateIDColumn]));
                }
                set {
                    this[this.tableInvoices.UtilityRateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UtilityUnitRate {
                get {
                    return ((decimal)(this[this.tableInvoices.UtilityUnitRateColumn]));
                }
                set {
                    this[this.tableInvoices.UtilityUnitRateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CompanyID {
                get {
                    return ((int)(this[this.tableInvoices.CompanyIDColumn]));
                }
                set {
                    this[this.tableInvoices.CompanyIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LocationID {
                get {
                    return ((int)(this[this.tableInvoices.LocationIDColumn]));
                }
                set {
                    this[this.tableInvoices.LocationIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Naration {
                get {
                    return ((string)(this[this.tableInvoices.NarationColumn]));
                }
                set {
                    this[this.tableInvoices.NarationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiced {
                get {
                    return ((bool)(this[this.tableInvoices.IsInvoicedColumn]));
                }
                set {
                    this[this.tableInvoices.IsInvoicedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ShopID {
                get {
                    return ((int)(this[this.tableInvoices.ShopIDColumn]));
                }
                set {
                    this[this.tableInvoices.ShopIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShopNo {
                get {
                    return ((string)(this[this.tableInvoices.ShopNoColumn]));
                }
                set {
                    this[this.tableInvoices.ShopNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShopName {
                get {
                    return ((string)(this[this.tableInvoices.ShopNameColumn]));
                }
                set {
                    this[this.tableInvoices.ShopNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTaxCustomer {
                get {
                    return ((bool)(this[this.tableInvoices.IsTaxCustomerColumn]));
                }
                set {
                    this[this.tableInvoices.IsTaxCustomerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TaxRegNo {
                get {
                    return ((string)(this[this.tableInvoices.TaxRegNoColumn]));
                }
                set {
                    this[this.tableInvoices.TaxRegNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Ratio {
                get {
                    return ((decimal)(this[this.tableInvoices.RatioColumn]));
                }
                set {
                    this[this.tableInvoices.RatioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal AreaInSqFt {
                get {
                    return ((decimal)(this[this.tableInvoices.AreaInSqFtColumn]));
                }
                set {
                    this[this.tableInvoices.AreaInSqFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RentPerSqFt {
                get {
                    return ((decimal)(this[this.tableInvoices.RentPerSqFtColumn]));
                }
                set {
                    this[this.tableInvoices.RentPerSqFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SCPerSqFt {
                get {
                    return ((decimal)(this[this.tableInvoices.SCPerSqFtColumn]));
                }
                set {
                    this[this.tableInvoices.SCPerSqFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RentPerMonth {
                get {
                    return ((decimal)(this[this.tableInvoices.RentPerMonthColumn]));
                }
                set {
                    this[this.tableInvoices.RentPerMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SCPerMonth {
                get {
                    return ((decimal)(this[this.tableInvoices.SCPerMonthColumn]));
                }
                set {
                    this[this.tableInvoices.SCPerMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RentWIthSCPerSqFt {
                get {
                    return ((decimal)(this[this.tableInvoices.RentWIthSCPerSqFtColumn]));
                }
                set {
                    this[this.tableInvoices.RentWIthSCPerSqFtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RentWithSCPerMonth {
                get {
                    return ((decimal)(this[this.tableInvoices.RentWithSCPerMonthColumn]));
                }
                set {
                    this[this.tableInvoices.RentWithSCPerMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAmount {
                get {
                    return ((decimal)(this[this.tableInvoices.TotalAmountColumn]));
                }
                set {
                    this[this.tableInvoices.TotalAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalTax {
                get {
                    return ((decimal)(this[this.tableInvoices.TotalTaxColumn]));
                }
                set {
                    this[this.tableInvoices.TotalTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal OtherTax {
                get {
                    return ((decimal)(this[this.tableInvoices.OtherTaxColumn]));
                }
                set {
                    this[this.tableInvoices.OtherTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MandatoryTaxID {
                get {
                    return ((int)(this[this.tableInvoices.MandatoryTaxIDColumn]));
                }
                set {
                    this[this.tableInvoices.MandatoryTaxIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MandatoryTaxRateID {
                get {
                    return ((int)(this[this.tableInvoices.MandatoryTaxRateIDColumn]));
                }
                set {
                    this[this.tableInvoices.MandatoryTaxRateIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MandatoryTaxAmount {
                get {
                    return ((decimal)(this[this.tableInvoices.MandatoryTaxAmountColumn]));
                }
                set {
                    this[this.tableInvoices.MandatoryTaxAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalWithMandatoryTax {
                get {
                    return ((decimal)(this[this.tableInvoices.TotalWithMandatoryTaxColumn]));
                }
                set {
                    this[this.tableInvoices.TotalWithMandatoryTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalAmtWithTaxExcludedMandatoryTax {
                get {
                    return ((decimal)(this[this.tableInvoices.TotalAmtWithTaxExcludedMandatoryTaxColumn]));
                }
                set {
                    this[this.tableInvoices.TotalAmtWithTaxExcludedMandatoryTaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalRentPerMonth {
                get {
                    return ((decimal)(this[this.tableInvoices.TotalRentPerMonthColumn]));
                }
                set {
                    this[this.tableInvoices.TotalRentPerMonthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LevelID {
                get {
                    return ((int)(this[this.tableInvoices.LevelIDColumn]));
                }
                set {
                    this[this.tableInvoices.LevelIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModified {
                get {
                    return ((bool)(this[this.tableInvoices.IsModifiedColumn]));
                }
                set {
                    this[this.tableInvoices.IsModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ModifiedDate {
                get {
                    return ((global::System.DateTime)(this[this.tableInvoices.ModifiedDateColumn]));
                }
                set {
                    this[this.tableInvoices.ModifiedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPerDay {
                get {
                    return ((bool)(this[this.tableInvoices.IsPerDayColumn]));
                }
                set {
                    this[this.tableInvoices.IsPerDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NosDay {
                get {
                    return ((int)(this[this.tableInvoices.NosDayColumn]));
                }
                set {
                    this[this.tableInvoices.NosDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MandatoryTaxCode {
                get {
                    return ((string)(this[this.tableInvoices.MandatoryTaxCodeColumn]));
                }
                set {
                    this[this.tableInvoices.MandatoryTaxCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int OtherServiceID {
                get {
                    return ((int)(this[this.tableInvoices.OtherServiceIDColumn]));
                }
                set {
                    this[this.tableInvoices.OtherServiceIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ContractName {
                get {
                    try {
                        return ((string)(this[this.tableInvoices.ContractNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ContractName\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.ContractNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_CompanyCode {
                get {
                    return ((string)(this[this.tableInvoices.SAP_CompanyCodeColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_CompanyCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SAP_PstnDateInDoc {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableInvoices.SAP_PstnDateInDocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SAP_PstnDateInDoc\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.SAP_PstnDateInDocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_DocHeaderText {
                get {
                    return ((string)(this[this.tableInvoices.SAP_DocHeaderTextColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_DocHeaderTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_DocType {
                get {
                    return ((string)(this[this.tableInvoices.SAP_DocTypeColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_DocTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_Text {
                get {
                    return ((string)(this[this.tableInvoices.SAP_TextColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_RefKey1 {
                get {
                    return ((string)(this[this.tableInvoices.SAP_RefKey1Column]));
                }
                set {
                    this[this.tableInvoices.SAP_RefKey1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_RefKey2 {
                get {
                    return ((string)(this[this.tableInvoices.SAP_RefKey2Column]));
                }
                set {
                    this[this.tableInvoices.SAP_RefKey2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_RefKey3 {
                get {
                    return ((string)(this[this.tableInvoices.SAP_RefKey3Column]));
                }
                set {
                    this[this.tableInvoices.SAP_RefKey3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_Assignment {
                get {
                    return ((string)(this[this.tableInvoices.SAP_AssignmentColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_AssignmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_PostingKey {
                get {
                    return ((string)(this[this.tableInvoices.SAP_PostingKeyColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_PostingKeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SAP_GLACC {
                get {
                    return ((string)(this[this.tableInvoices.SAP_GLACCColumn]));
                }
                set {
                    this[this.tableInvoices.SAP_GLACCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Is_SAPUploaded {
                get {
                    return ((bool)(this[this.tableInvoices.Is_SAPUploadedColumn]));
                }
                set {
                    this[this.tableInvoices.Is_SAPUploadedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal RentalDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoices.RentalDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RentalDiscount\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.RentalDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SCDiscount {
                get {
                    try {
                        return ((decimal)(this[this.tableInvoices.SCDiscountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SCDiscount\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.SCDiscountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProforma {
                get {
                    try {
                        return ((bool)(this[this.tableInvoices.IsProformaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsProforma\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.IsProformaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int InvoiceState {
                get {
                    try {
                        return ((int)(this[this.tableInvoices.InvoiceStateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InvoiceState\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.InvoiceStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProfomaNo {
                get {
                    try {
                        return ((string)(this[this.tableInvoices.ProfomaNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProfomaNo\' in table \'Invoices\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableInvoices.ProfomaNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ProfomaSequenceNo {
                get {
                    return ((int)(this[this.tableInvoices.ProfomaSequenceNoColumn]));
                }
                set {
                    this[this.tableInvoices.ProfomaSequenceNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceDateNull() {
                return this.IsNull(this.tableInvoices.InvoiceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceDateNull() {
                this[this.tableInvoices.InvoiceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerAddressNull() {
                return this.IsNull(this.tableInvoices.CustomerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerAddressNull() {
                this[this.tableInvoices.CustomerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCustomerAddress2Null() {
                return this.IsNull(this.tableInvoices.CustomerAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCustomerAddress2Null() {
                this[this.tableInvoices.CustomerAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFromNull() {
                return this.IsNull(this.tableInvoices.DateFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFromNull() {
                this[this.tableInvoices.DateFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateToNull() {
                return this.IsNull(this.tableInvoices.DateToColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateToNull() {
                this[this.tableInvoices.DateToColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsContractNameNull() {
                return this.IsNull(this.tableInvoices.ContractNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetContractNameNull() {
                this[this.tableInvoices.ContractNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSAP_PstnDateInDocNull() {
                return this.IsNull(this.tableInvoices.SAP_PstnDateInDocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSAP_PstnDateInDocNull() {
                this[this.tableInvoices.SAP_PstnDateInDocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRentalDiscountNull() {
                return this.IsNull(this.tableInvoices.RentalDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRentalDiscountNull() {
                this[this.tableInvoices.RentalDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSCDiscountNull() {
                return this.IsNull(this.tableInvoices.SCDiscountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSCDiscountNull() {
                this[this.tableInvoices.SCDiscountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsProformaNull() {
                return this.IsNull(this.tableInvoices.IsProformaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsProformaNull() {
                this[this.tableInvoices.IsProformaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInvoiceStateNull() {
                return this.IsNull(this.tableInvoices.InvoiceStateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInvoiceStateNull() {
                this[this.tableInvoices.InvoiceStateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfomaNoNull() {
                return this.IsNull(this.tableInvoices.ProfomaNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfomaNoNull() {
                this[this.tableInvoices.ProfomaNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class InvoicesRowChangeEvent : global::System.EventArgs {
            
            private InvoicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRowChangeEvent(InvoicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public InvoicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DataTier.dsReportsTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class InvoicesAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public InvoicesAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Invoices";
            tableMapping.ColumnMappings.Add("InvoiceID", "InvoiceID");
            tableMapping.ColumnMappings.Add("InvoiceTypeID", "InvoiceTypeID");
            tableMapping.ColumnMappings.Add("UtilityID", "UtilityID");
            tableMapping.ColumnMappings.Add("SubInvTypeID", "SubInvTypeID");
            tableMapping.ColumnMappings.Add("InvoiceNo", "InvoiceNo");
            tableMapping.ColumnMappings.Add("SequenceNo", "SequenceNo");
            tableMapping.ColumnMappings.Add("ContractID", "ContractID");
            tableMapping.ColumnMappings.Add("ContractRateID", "ContractRateID");
            tableMapping.ColumnMappings.Add("ContractClosureID", "ContractClosureID");
            tableMapping.ColumnMappings.Add("Contract_RentSchemeID", "Contract_RentSchemeID");
            tableMapping.ColumnMappings.Add("InvoiceDate", "InvoiceDate");
            tableMapping.ColumnMappings.Add("ProcessYear", "ProcessYear");
            tableMapping.ColumnMappings.Add("ProcessMonth", "ProcessMonth");
            tableMapping.ColumnMappings.Add("ExtendedCustomerID", "ExtendedCustomerID");
            tableMapping.ColumnMappings.Add("CustomerID", "CustomerID");
            tableMapping.ColumnMappings.Add("CustomerName", "CustomerName");
            tableMapping.ColumnMappings.Add("CustomerAddress", "CustomerAddress");
            tableMapping.ColumnMappings.Add("CustomerAddress2", "CustomerAddress2");
            tableMapping.ColumnMappings.Add("DateFrom", "DateFrom");
            tableMapping.ColumnMappings.Add("DateTo", "DateTo");
            tableMapping.ColumnMappings.Add("IsProcessed", "IsProcessed");
            tableMapping.ColumnMappings.Add("IsConfirmed", "IsConfirmed");
            tableMapping.ColumnMappings.Add("StartReading", "StartReading");
            tableMapping.ColumnMappings.Add("EndReading", "EndReading");
            tableMapping.ColumnMappings.Add("Reset", "Reset");
            tableMapping.ColumnMappings.Add("StartReading2", "StartReading2");
            tableMapping.ColumnMappings.Add("EndReading2", "EndReading2");
            tableMapping.ColumnMappings.Add("UtilityRateID", "UtilityRateID");
            tableMapping.ColumnMappings.Add("UtilityUnitRate", "UtilityUnitRate");
            tableMapping.ColumnMappings.Add("CompanyID", "CompanyID");
            tableMapping.ColumnMappings.Add("LocationID", "LocationID");
            tableMapping.ColumnMappings.Add("Naration", "Naration");
            tableMapping.ColumnMappings.Add("IsInvoiced", "IsInvoiced");
            tableMapping.ColumnMappings.Add("ShopID", "ShopID");
            tableMapping.ColumnMappings.Add("ShopNo", "ShopNo");
            tableMapping.ColumnMappings.Add("ShopName", "ShopName");
            tableMapping.ColumnMappings.Add("IsTaxCustomer", "IsTaxCustomer");
            tableMapping.ColumnMappings.Add("TaxRegNo", "TaxRegNo");
            tableMapping.ColumnMappings.Add("Ratio", "Ratio");
            tableMapping.ColumnMappings.Add("AreaInSqFt", "AreaInSqFt");
            tableMapping.ColumnMappings.Add("RentPerSqFt", "RentPerSqFt");
            tableMapping.ColumnMappings.Add("SCPerSqFt", "SCPerSqFt");
            tableMapping.ColumnMappings.Add("RentPerMonth", "RentPerMonth");
            tableMapping.ColumnMappings.Add("SCPerMonth", "SCPerMonth");
            tableMapping.ColumnMappings.Add("RentWIthSCPerSqFt", "RentWIthSCPerSqFt");
            tableMapping.ColumnMappings.Add("RentWithSCPerMonth", "RentWithSCPerMonth");
            tableMapping.ColumnMappings.Add("TotalAmount", "TotalAmount");
            tableMapping.ColumnMappings.Add("TotalTax", "TotalTax");
            tableMapping.ColumnMappings.Add("OtherTax", "OtherTax");
            tableMapping.ColumnMappings.Add("MandatoryTaxID", "MandatoryTaxID");
            tableMapping.ColumnMappings.Add("MandatoryTaxRateID", "MandatoryTaxRateID");
            tableMapping.ColumnMappings.Add("MandatoryTaxAmount", "MandatoryTaxAmount");
            tableMapping.ColumnMappings.Add("TotalWithMandatoryTax", "TotalWithMandatoryTax");
            tableMapping.ColumnMappings.Add("TotalAmtWithTaxExcludedMandatoryTax", "TotalAmtWithTaxExcludedMandatoryTax");
            tableMapping.ColumnMappings.Add("TotalRentPerMonth", "TotalRentPerMonth");
            tableMapping.ColumnMappings.Add("LevelID", "LevelID");
            tableMapping.ColumnMappings.Add("IsModified", "IsModified");
            tableMapping.ColumnMappings.Add("ModifiedDate", "ModifiedDate");
            tableMapping.ColumnMappings.Add("IsPerDay", "IsPerDay");
            tableMapping.ColumnMappings.Add("NosDay", "NosDay");
            tableMapping.ColumnMappings.Add("MandatoryTaxCode", "MandatoryTaxCode");
            tableMapping.ColumnMappings.Add("OtherServiceID", "OtherServiceID");
            tableMapping.ColumnMappings.Add("ContractName", "ContractName");
            tableMapping.ColumnMappings.Add("SAP_CompanyCode", "SAP_CompanyCode");
            tableMapping.ColumnMappings.Add("SAP_PstnDateInDoc", "SAP_PstnDateInDoc");
            tableMapping.ColumnMappings.Add("SAP_DocHeaderText", "SAP_DocHeaderText");
            tableMapping.ColumnMappings.Add("SAP_DocType", "SAP_DocType");
            tableMapping.ColumnMappings.Add("SAP_Text", "SAP_Text");
            tableMapping.ColumnMappings.Add("SAP_RefKey1", "SAP_RefKey1");
            tableMapping.ColumnMappings.Add("SAP_RefKey2", "SAP_RefKey2");
            tableMapping.ColumnMappings.Add("SAP_RefKey3", "SAP_RefKey3");
            tableMapping.ColumnMappings.Add("SAP_Assignment", "SAP_Assignment");
            tableMapping.ColumnMappings.Add("SAP_PostingKey", "SAP_PostingKey");
            tableMapping.ColumnMappings.Add("SAP_GLACC", "SAP_GLACC");
            tableMapping.ColumnMappings.Add("Is_SAPUploaded", "Is_SAPUploaded");
            tableMapping.ColumnMappings.Add("RentalDiscount", "RentalDiscount");
            tableMapping.ColumnMappings.Add("SCDiscount", "SCDiscount");
            tableMapping.ColumnMappings.Add("IsProforma", "IsProforma");
            tableMapping.ColumnMappings.Add("InvoiceState", "InvoiceState");
            tableMapping.ColumnMappings.Add("ProfomaNo", "ProfomaNo");
            tableMapping.ColumnMappings.Add("ProfomaSequenceNo", "ProfomaSequenceNo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [Invoices] WHERE (([InvoiceID] = @Original_InvoiceID) AND ([InvoiceTy" +
                "peID] = @Original_InvoiceTypeID) AND ([UtilityID] = @Original_UtilityID) AND ([S" +
                "ubInvTypeID] = @Original_SubInvTypeID) AND ([InvoiceNo] = @Original_InvoiceNo) A" +
                "ND ([SequenceNo] = @Original_SequenceNo) AND ([ContractID] = @Original_ContractI" +
                "D) AND ([ContractRateID] = @Original_ContractRateID) AND ([ContractClosureID] = " +
                "@Original_ContractClosureID) AND ([Contract_RentSchemeID] = @Original_Contract_R" +
                "entSchemeID) AND ((@IsNull_InvoiceDate = 1 AND [InvoiceDate] IS NULL) OR ([Invoi" +
                "ceDate] = @Original_InvoiceDate)) AND ([ProcessYear] = @Original_ProcessYear) AN" +
                "D ([ProcessMonth] = @Original_ProcessMonth) AND ([ExtendedCustomerID] = @Origina" +
                "l_ExtendedCustomerID) AND ([CustomerID] = @Original_CustomerID) AND ([CustomerNa" +
                "me] = @Original_CustomerName) AND ((@IsNull_DateFrom = 1 AND [DateFrom] IS NULL)" +
                " OR ([DateFrom] = @Original_DateFrom)) AND ((@IsNull_DateTo = 1 AND [DateTo] IS " +
                "NULL) OR ([DateTo] = @Original_DateTo)) AND ([IsProcessed] = @Original_IsProcess" +
                "ed) AND ([IsConfirmed] = @Original_IsConfirmed) AND ([StartReading] = @Original_" +
                "StartReading) AND ([EndReading] = @Original_EndReading) AND ([Reset] = @Original" +
                "_Reset) AND ([StartReading2] = @Original_StartReading2) AND ([EndReading2] = @Or" +
                "iginal_EndReading2) AND ([UtilityRateID] = @Original_UtilityRateID) AND ([Utilit" +
                "yUnitRate] = @Original_UtilityUnitRate) AND ([CompanyID] = @Original_CompanyID) " +
                "AND ([LocationID] = @Original_LocationID) AND ([IsInvoiced] = @Original_IsInvoic" +
                "ed) AND ([ShopID] = @Original_ShopID) AND ([ShopNo] = @Original_ShopNo) AND ([Sh" +
                "opName] = @Original_ShopName) AND ([IsTaxCustomer] = @Original_IsTaxCustomer) AN" +
                "D ([Ratio] = @Original_Ratio) AND ([AreaInSqFt] = @Original_AreaInSqFt) AND ([Re" +
                "ntPerSqFt] = @Original_RentPerSqFt) AND ([SCPerSqFt] = @Original_SCPerSqFt) AND " +
                "([RentPerMonth] = @Original_RentPerMonth) AND ([SCPerMonth] = @Original_SCPerMon" +
                "th) AND ([RentWIthSCPerSqFt] = @Original_RentWIthSCPerSqFt) AND ([RentWithSCPerM" +
                "onth] = @Original_RentWithSCPerMonth) AND ([TotalAmount] = @Original_TotalAmount" +
                ") AND ([TotalTax] = @Original_TotalTax) AND ([OtherTax] = @Original_OtherTax) AN" +
                "D ([MandatoryTaxID] = @Original_MandatoryTaxID) AND ([MandatoryTaxRateID] = @Ori" +
                "ginal_MandatoryTaxRateID) AND ([MandatoryTaxAmount] = @Original_MandatoryTaxAmou" +
                "nt) AND ([TotalWithMandatoryTax] = @Original_TotalWithMandatoryTax) AND ([TotalA" +
                "mtWithTaxExcludedMandatoryTax] = @Original_TotalAmtWithTaxExcludedMandatoryTax) " +
                "AND ([TotalRentPerMonth] = @Original_TotalRentPerMonth) AND ([LevelID] = @Origin" +
                "al_LevelID) AND ([IsModified] = @Original_IsModified) AND ([ModifiedDate] = @Ori" +
                "ginal_ModifiedDate) AND ([IsPerDay] = @Original_IsPerDay) AND ([NosDay] = @Origi" +
                "nal_NosDay) AND ([MandatoryTaxCode] = @Original_MandatoryTaxCode) AND ([OtherSer" +
                "viceID] = @Original_OtherServiceID) AND ((@IsNull_ContractName = 1 AND [Contract" +
                "Name] IS NULL) OR ([ContractName] = @Original_ContractName)) AND ([SAP_CompanyCo" +
                "de] = @Original_SAP_CompanyCode) AND ((@IsNull_SAP_PstnDateInDoc = 1 AND [SAP_Ps" +
                "tnDateInDoc] IS NULL) OR ([SAP_PstnDateInDoc] = @Original_SAP_PstnDateInDoc)) AN" +
                "D ([SAP_DocHeaderText] = @Original_SAP_DocHeaderText) AND ([SAP_DocType] = @Orig" +
                "inal_SAP_DocType) AND ([SAP_RefKey1] = @Original_SAP_RefKey1) AND ([SAP_RefKey2]" +
                " = @Original_SAP_RefKey2) AND ([SAP_RefKey3] = @Original_SAP_RefKey3) AND ([SAP_" +
                "Assignment] = @Original_SAP_Assignment) AND ([SAP_PostingKey] = @Original_SAP_Po" +
                "stingKey) AND ([SAP_GLACC] = @Original_SAP_GLACC) AND ([Is_SAPUploaded] = @Origi" +
                "nal_Is_SAPUploaded) AND ([RentalDiscount] = @Original_RentalDiscount) AND ([SCDi" +
                "scount] = @Original_SCDiscount) AND ((@IsNull_InvoiceState = 1 AND [InvoiceState" +
                "] IS NULL) OR ([InvoiceState] = @Original_InvoiceState)) AND ((@IsNull_IsProform" +
                "a = 1 AND [IsProforma] IS NULL) OR ([IsProforma] = @Original_IsProforma)) AND ((" +
                "@IsNull_ProfomaNo = 1 AND [ProfomaNo] IS NULL) OR ([ProfomaNo] = @Original_Profo" +
                "maNo)) AND ([ProfomaSequenceNo] = @Original_ProfomaSequenceNo))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubInvTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubInvTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractClosureID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractClosureID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contract_RentSchemeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contract_RentSchemeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedCustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityUnitRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "UtilityUnitRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsTaxCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTaxCustomer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ratio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Ratio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaInSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "AreaInSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentWIthSCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWIthSCPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentWithSCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWithSCPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "OtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "MandatoryTaxAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWithMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalWithMandatoryTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalRentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalRentPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPerDay", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPerDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NosDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NosDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherServiceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_CompanyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_CompanyCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAP_PstnDateInDoc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_PstnDateInDoc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_DocHeaderText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocHeaderText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_DocType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_Assignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Assignment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_PostingKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PostingKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_GLACC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_GLACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Is_SAPUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_SAPUploaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentalDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsProforma", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProforma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProfomaNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfomaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfomaSequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaSequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Invoices] ([InvoiceTypeID], [UtilityID], [SubInvTypeID], [InvoiceNo]" +
                ", [SequenceNo], [ContractID], [ContractRateID], [ContractClosureID], [Contract_R" +
                "entSchemeID], [InvoiceDate], [ProcessYear], [ProcessMonth], [ExtendedCustomerID]" +
                ", [CustomerID], [CustomerName], [CustomerAddress], [CustomerAddress2], [DateFrom" +
                "], [DateTo], [IsProcessed], [IsConfirmed], [StartReading], [EndReading], [Reset]" +
                ", [StartReading2], [EndReading2], [UtilityRateID], [UtilityUnitRate], [CompanyID" +
                "], [LocationID], [Naration], [IsInvoiced], [ShopID], [ShopNo], [ShopName], [IsTa" +
                "xCustomer], [TaxRegNo], [Ratio], [AreaInSqFt], [RentPerSqFt], [SCPerSqFt], [Rent" +
                "PerMonth], [SCPerMonth], [RentWIthSCPerSqFt], [RentWithSCPerMonth], [TotalAmount" +
                "], [TotalTax], [OtherTax], [MandatoryTaxID], [MandatoryTaxRateID], [MandatoryTax" +
                "Amount], [TotalWithMandatoryTax], [TotalAmtWithTaxExcludedMandatoryTax], [TotalR" +
                "entPerMonth], [LevelID], [IsModified], [ModifiedDate], [IsPerDay], [NosDay], [Ma" +
                "ndatoryTaxCode], [OtherServiceID], [ContractName], [SAP_CompanyCode], [SAP_PstnD" +
                "ateInDoc], [SAP_DocHeaderText], [SAP_DocType], [SAP_Text], [SAP_RefKey1], [SAP_R" +
                "efKey2], [SAP_RefKey3], [SAP_Assignment], [SAP_PostingKey], [SAP_GLACC], [Is_SAP" +
                "Uploaded], [RentalDiscount], [SCDiscount], [InvoiceState], [IsProforma], [Profom" +
                "aNo], [ProfomaSequenceNo]) VALUES (@InvoiceTypeID, @UtilityID, @SubInvTypeID, @I" +
                "nvoiceNo, @SequenceNo, @ContractID, @ContractRateID, @ContractClosureID, @Contra" +
                "ct_RentSchemeID, @InvoiceDate, @ProcessYear, @ProcessMonth, @ExtendedCustomerID," +
                " @CustomerID, @CustomerName, @CustomerAddress, @CustomerAddress2, @DateFrom, @Da" +
                "teTo, @IsProcessed, @IsConfirmed, @StartReading, @EndReading, @Reset, @StartRead" +
                "ing2, @EndReading2, @UtilityRateID, @UtilityUnitRate, @CompanyID, @LocationID, @" +
                "Naration, @IsInvoiced, @ShopID, @ShopNo, @ShopName, @IsTaxCustomer, @TaxRegNo, @" +
                "Ratio, @AreaInSqFt, @RentPerSqFt, @SCPerSqFt, @RentPerMonth, @SCPerMonth, @RentW" +
                "IthSCPerSqFt, @RentWithSCPerMonth, @TotalAmount, @TotalTax, @OtherTax, @Mandator" +
                "yTaxID, @MandatoryTaxRateID, @MandatoryTaxAmount, @TotalWithMandatoryTax, @Total" +
                "AmtWithTaxExcludedMandatoryTax, @TotalRentPerMonth, @LevelID, @IsModified, @Modi" +
                "fiedDate, @IsPerDay, @NosDay, @MandatoryTaxCode, @OtherServiceID, @ContractName," +
                " @SAP_CompanyCode, @SAP_PstnDateInDoc, @SAP_DocHeaderText, @SAP_DocType, @SAP_Te" +
                "xt, @SAP_RefKey1, @SAP_RefKey2, @SAP_RefKey3, @SAP_Assignment, @SAP_PostingKey, " +
                "@SAP_GLACC, @Is_SAPUploaded, @RentalDiscount, @SCDiscount, @InvoiceState, @IsPro" +
                "forma, @ProfomaNo, @ProfomaSequenceNo);\r\nSELECT InvoiceID, InvoiceTypeID, Utilit" +
                "yID, SubInvTypeID, InvoiceNo, SequenceNo, ContractID, ContractRateID, ContractCl" +
                "osureID, Contract_RentSchemeID, InvoiceDate, ProcessYear, ProcessMonth, Extended" +
                "CustomerID, CustomerID, CustomerName, CustomerAddress, CustomerAddress2, DateFro" +
                "m, DateTo, IsProcessed, IsConfirmed, StartReading, EndReading, Reset, StartReadi" +
                "ng2, EndReading2, UtilityRateID, UtilityUnitRate, CompanyID, LocationID, Naratio" +
                "n, IsInvoiced, ShopID, ShopNo, ShopName, IsTaxCustomer, TaxRegNo, Ratio, AreaInS" +
                "qFt, RentPerSqFt, SCPerSqFt, RentPerMonth, SCPerMonth, RentWIthSCPerSqFt, RentWi" +
                "thSCPerMonth, TotalAmount, TotalTax, OtherTax, MandatoryTaxID, MandatoryTaxRateI" +
                "D, MandatoryTaxAmount, TotalWithMandatoryTax, TotalAmtWithTaxExcludedMandatoryTa" +
                "x, TotalRentPerMonth, LevelID, IsModified, ModifiedDate, IsPerDay, NosDay, Manda" +
                "toryTaxCode, OtherServiceID, ContractName, SAP_CompanyCode, SAP_PstnDateInDoc, S" +
                "AP_DocHeaderText, SAP_DocType, SAP_Text, SAP_RefKey1, SAP_RefKey2, SAP_RefKey3, " +
                "SAP_Assignment, SAP_PostingKey, SAP_GLACC, Is_SAPUploaded, RentalDiscount, SCDis" +
                "count, InvoiceState, IsProforma, ProfomaNo, ProfomaSequenceNo FROM Invoices WHER" +
                "E (InvoiceID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubInvTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubInvTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractClosureID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractClosureID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contract_RentSchemeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contract_RentSchemeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityUnitRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "UtilityUnitRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Naration", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTaxCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTaxCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxRegNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxRegNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ratio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Ratio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "AreaInSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentWIthSCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWIthSCPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentWithSCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWithSCPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "OtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "MandatoryTaxAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWithMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalWithMandatoryTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalRentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalRentPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPerDay", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPerDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NosDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NosDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_CompanyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_CompanyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_PstnDateInDoc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_DocHeaderText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocHeaderText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_DocType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_Assignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Assignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_PostingKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PostingKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_GLACC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_GLACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Is_SAPUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_SAPUploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentalDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProforma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfomaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfomaSequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaSequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [Invoices] SET [InvoiceTypeID] = @InvoiceTypeID, [UtilityID] = @UtilityID," +
                " [SubInvTypeID] = @SubInvTypeID, [InvoiceNo] = @InvoiceNo, [SequenceNo] = @Seque" +
                "nceNo, [ContractID] = @ContractID, [ContractRateID] = @ContractRateID, [Contract" +
                "ClosureID] = @ContractClosureID, [Contract_RentSchemeID] = @Contract_RentSchemeI" +
                "D, [InvoiceDate] = @InvoiceDate, [ProcessYear] = @ProcessYear, [ProcessMonth] = " +
                "@ProcessMonth, [ExtendedCustomerID] = @ExtendedCustomerID, [CustomerID] = @Custo" +
                "merID, [CustomerName] = @CustomerName, [CustomerAddress] = @CustomerAddress, [Cu" +
                "stomerAddress2] = @CustomerAddress2, [DateFrom] = @DateFrom, [DateTo] = @DateTo," +
                " [IsProcessed] = @IsProcessed, [IsConfirmed] = @IsConfirmed, [StartReading] = @S" +
                "tartReading, [EndReading] = @EndReading, [Reset] = @Reset, [StartReading2] = @St" +
                "artReading2, [EndReading2] = @EndReading2, [UtilityRateID] = @UtilityRateID, [Ut" +
                "ilityUnitRate] = @UtilityUnitRate, [CompanyID] = @CompanyID, [LocationID] = @Loc" +
                "ationID, [Naration] = @Naration, [IsInvoiced] = @IsInvoiced, [ShopID] = @ShopID," +
                " [ShopNo] = @ShopNo, [ShopName] = @ShopName, [IsTaxCustomer] = @IsTaxCustomer, [" +
                "TaxRegNo] = @TaxRegNo, [Ratio] = @Ratio, [AreaInSqFt] = @AreaInSqFt, [RentPerSqF" +
                "t] = @RentPerSqFt, [SCPerSqFt] = @SCPerSqFt, [RentPerMonth] = @RentPerMonth, [SC" +
                "PerMonth] = @SCPerMonth, [RentWIthSCPerSqFt] = @RentWIthSCPerSqFt, [RentWithSCPe" +
                "rMonth] = @RentWithSCPerMonth, [TotalAmount] = @TotalAmount, [TotalTax] = @Total" +
                "Tax, [OtherTax] = @OtherTax, [MandatoryTaxID] = @MandatoryTaxID, [MandatoryTaxRa" +
                "teID] = @MandatoryTaxRateID, [MandatoryTaxAmount] = @MandatoryTaxAmount, [TotalW" +
                "ithMandatoryTax] = @TotalWithMandatoryTax, [TotalAmtWithTaxExcludedMandatoryTax]" +
                " = @TotalAmtWithTaxExcludedMandatoryTax, [TotalRentPerMonth] = @TotalRentPerMont" +
                "h, [LevelID] = @LevelID, [IsModified] = @IsModified, [ModifiedDate] = @ModifiedD" +
                "ate, [IsPerDay] = @IsPerDay, [NosDay] = @NosDay, [MandatoryTaxCode] = @Mandatory" +
                "TaxCode, [OtherServiceID] = @OtherServiceID, [ContractName] = @ContractName, [SA" +
                "P_CompanyCode] = @SAP_CompanyCode, [SAP_PstnDateInDoc] = @SAP_PstnDateInDoc, [SA" +
                "P_DocHeaderText] = @SAP_DocHeaderText, [SAP_DocType] = @SAP_DocType, [SAP_Text] " +
                "= @SAP_Text, [SAP_RefKey1] = @SAP_RefKey1, [SAP_RefKey2] = @SAP_RefKey2, [SAP_Re" +
                "fKey3] = @SAP_RefKey3, [SAP_Assignment] = @SAP_Assignment, [SAP_PostingKey] = @S" +
                "AP_PostingKey, [SAP_GLACC] = @SAP_GLACC, [Is_SAPUploaded] = @Is_SAPUploaded, [Re" +
                "ntalDiscount] = @RentalDiscount, [SCDiscount] = @SCDiscount, [InvoiceState] = @I" +
                "nvoiceState, [IsProforma] = @IsProforma, [ProfomaNo] = @ProfomaNo, [ProfomaSeque" +
                "nceNo] = @ProfomaSequenceNo WHERE (([InvoiceID] = @Original_InvoiceID) AND ([Inv" +
                "oiceTypeID] = @Original_InvoiceTypeID) AND ([UtilityID] = @Original_UtilityID) A" +
                "ND ([SubInvTypeID] = @Original_SubInvTypeID) AND ([InvoiceNo] = @Original_Invoic" +
                "eNo) AND ([SequenceNo] = @Original_SequenceNo) AND ([ContractID] = @Original_Con" +
                "tractID) AND ([ContractRateID] = @Original_ContractRateID) AND ([ContractClosure" +
                "ID] = @Original_ContractClosureID) AND ([Contract_RentSchemeID] = @Original_Cont" +
                "ract_RentSchemeID) AND ((@IsNull_InvoiceDate = 1 AND [InvoiceDate] IS NULL) OR (" +
                "[InvoiceDate] = @Original_InvoiceDate)) AND ([ProcessYear] = @Original_ProcessYe" +
                "ar) AND ([ProcessMonth] = @Original_ProcessMonth) AND ([ExtendedCustomerID] = @O" +
                "riginal_ExtendedCustomerID) AND ([CustomerID] = @Original_CustomerID) AND ([Cust" +
                "omerName] = @Original_CustomerName) AND ((@IsNull_DateFrom = 1 AND [DateFrom] IS" +
                " NULL) OR ([DateFrom] = @Original_DateFrom)) AND ((@IsNull_DateTo = 1 AND [DateT" +
                "o] IS NULL) OR ([DateTo] = @Original_DateTo)) AND ([IsProcessed] = @Original_IsP" +
                "rocessed) AND ([IsConfirmed] = @Original_IsConfirmed) AND ([StartReading] = @Ori" +
                "ginal_StartReading) AND ([EndReading] = @Original_EndReading) AND ([Reset] = @Or" +
                "iginal_Reset) AND ([StartReading2] = @Original_StartReading2) AND ([EndReading2]" +
                " = @Original_EndReading2) AND ([UtilityRateID] = @Original_UtilityRateID) AND ([" +
                "UtilityUnitRate] = @Original_UtilityUnitRate) AND ([CompanyID] = @Original_Compa" +
                "nyID) AND ([LocationID] = @Original_LocationID) AND ([IsInvoiced] = @Original_Is" +
                "Invoiced) AND ([ShopID] = @Original_ShopID) AND ([ShopNo] = @Original_ShopNo) AN" +
                "D ([ShopName] = @Original_ShopName) AND ([IsTaxCustomer] = @Original_IsTaxCustom" +
                "er) AND ([Ratio] = @Original_Ratio) AND ([AreaInSqFt] = @Original_AreaInSqFt) AN" +
                "D ([RentPerSqFt] = @Original_RentPerSqFt) AND ([SCPerSqFt] = @Original_SCPerSqFt" +
                ") AND ([RentPerMonth] = @Original_RentPerMonth) AND ([SCPerMonth] = @Original_SC" +
                "PerMonth) AND ([RentWIthSCPerSqFt] = @Original_RentWIthSCPerSqFt) AND ([RentWith" +
                "SCPerMonth] = @Original_RentWithSCPerMonth) AND ([TotalAmount] = @Original_Total" +
                "Amount) AND ([TotalTax] = @Original_TotalTax) AND ([OtherTax] = @Original_OtherT" +
                "ax) AND ([MandatoryTaxID] = @Original_MandatoryTaxID) AND ([MandatoryTaxRateID] " +
                "= @Original_MandatoryTaxRateID) AND ([MandatoryTaxAmount] = @Original_MandatoryT" +
                "axAmount) AND ([TotalWithMandatoryTax] = @Original_TotalWithMandatoryTax) AND ([" +
                "TotalAmtWithTaxExcludedMandatoryTax] = @Original_TotalAmtWithTaxExcludedMandator" +
                "yTax) AND ([TotalRentPerMonth] = @Original_TotalRentPerMonth) AND ([LevelID] = @" +
                "Original_LevelID) AND ([IsModified] = @Original_IsModified) AND ([ModifiedDate] " +
                "= @Original_ModifiedDate) AND ([IsPerDay] = @Original_IsPerDay) AND ([NosDay] = " +
                "@Original_NosDay) AND ([MandatoryTaxCode] = @Original_MandatoryTaxCode) AND ([Ot" +
                "herServiceID] = @Original_OtherServiceID) AND ((@IsNull_ContractName = 1 AND [Co" +
                "ntractName] IS NULL) OR ([ContractName] = @Original_ContractName)) AND ([SAP_Com" +
                "panyCode] = @Original_SAP_CompanyCode) AND ((@IsNull_SAP_PstnDateInDoc = 1 AND [" +
                "SAP_PstnDateInDoc] IS NULL) OR ([SAP_PstnDateInDoc] = @Original_SAP_PstnDateInDo" +
                "c)) AND ([SAP_DocHeaderText] = @Original_SAP_DocHeaderText) AND ([SAP_DocType] =" +
                " @Original_SAP_DocType) AND ([SAP_RefKey1] = @Original_SAP_RefKey1) AND ([SAP_Re" +
                "fKey2] = @Original_SAP_RefKey2) AND ([SAP_RefKey3] = @Original_SAP_RefKey3) AND " +
                "([SAP_Assignment] = @Original_SAP_Assignment) AND ([SAP_PostingKey] = @Original_" +
                "SAP_PostingKey) AND ([SAP_GLACC] = @Original_SAP_GLACC) AND ([Is_SAPUploaded] = " +
                "@Original_Is_SAPUploaded) AND ([RentalDiscount] = @Original_RentalDiscount) AND " +
                "([SCDiscount] = @Original_SCDiscount) AND ((@IsNull_InvoiceState = 1 AND [Invoic" +
                "eState] IS NULL) OR ([InvoiceState] = @Original_InvoiceState)) AND ((@IsNull_IsP" +
                "roforma = 1 AND [IsProforma] IS NULL) OR ([IsProforma] = @Original_IsProforma)) " +
                "AND ((@IsNull_ProfomaNo = 1 AND [ProfomaNo] IS NULL) OR ([ProfomaNo] = @Original" +
                "_ProfomaNo)) AND ([ProfomaSequenceNo] = @Original_ProfomaSequenceNo));\r\nSELECT I" +
                "nvoiceID, InvoiceTypeID, UtilityID, SubInvTypeID, InvoiceNo, SequenceNo, Contrac" +
                "tID, ContractRateID, ContractClosureID, Contract_RentSchemeID, InvoiceDate, Proc" +
                "essYear, ProcessMonth, ExtendedCustomerID, CustomerID, CustomerName, CustomerAdd" +
                "ress, CustomerAddress2, DateFrom, DateTo, IsProcessed, IsConfirmed, StartReading" +
                ", EndReading, Reset, StartReading2, EndReading2, UtilityRateID, UtilityUnitRate," +
                " CompanyID, LocationID, Naration, IsInvoiced, ShopID, ShopNo, ShopName, IsTaxCus" +
                "tomer, TaxRegNo, Ratio, AreaInSqFt, RentPerSqFt, SCPerSqFt, RentPerMonth, SCPerM" +
                "onth, RentWIthSCPerSqFt, RentWithSCPerMonth, TotalAmount, TotalTax, OtherTax, Ma" +
                "ndatoryTaxID, MandatoryTaxRateID, MandatoryTaxAmount, TotalWithMandatoryTax, Tot" +
                "alAmtWithTaxExcludedMandatoryTax, TotalRentPerMonth, LevelID, IsModified, Modifi" +
                "edDate, IsPerDay, NosDay, MandatoryTaxCode, OtherServiceID, ContractName, SAP_Co" +
                "mpanyCode, SAP_PstnDateInDoc, SAP_DocHeaderText, SAP_DocType, SAP_Text, SAP_RefK" +
                "ey1, SAP_RefKey2, SAP_RefKey3, SAP_Assignment, SAP_PostingKey, SAP_GLACC, Is_SAP" +
                "Uploaded, RentalDiscount, SCDiscount, InvoiceState, IsProforma, ProfomaNo, Profo" +
                "maSequenceNo FROM Invoices WHERE (InvoiceID = @InvoiceID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SubInvTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubInvTypeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractClosureID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractClosureID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Contract_RentSchemeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contract_RentSchemeID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessYear", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProcessMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ExtendedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedCustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CustomerAddress2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerAddress2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@DateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Reset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StartReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EndReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UtilityUnitRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "UtilityUnitRate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Naration", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Naration", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ShopName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsTaxCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTaxCustomer", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TaxRegNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TaxRegNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Ratio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Ratio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AreaInSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "AreaInSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentWIthSCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWIthSCPerSqFt", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentWithSCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWithSCPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "OtherTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxRateID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "MandatoryTaxAmount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalWithMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalWithMandatoryTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TotalRentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalRentPerMonth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsModified", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ModifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedDate", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsPerDay", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPerDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NosDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NosDay", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MandatoryTaxCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@OtherServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherServiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ContractName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_CompanyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_CompanyCode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_PstnDateInDoc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_DocHeaderText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocHeaderText", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_DocType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocType", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_Text", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_RefKey3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey3", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_Assignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Assignment", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_PostingKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PostingKey", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SAP_GLACC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_GLACC", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Is_SAPUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_SAPUploaded", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RentalDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentalDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SCDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCDiscount", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsProforma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfomaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProfomaSequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaSequenceNo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SubInvTypeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SubInvTypeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractClosureID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractClosureID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Contract_RentSchemeID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Contract_RentSchemeID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceDate", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessYear", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessYear", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProcessMonth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProcessMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ExtendedCustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ExtendedCustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CustomerName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CustomerName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateFrom", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateFrom", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateFrom", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_DateTo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_DateTo", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "DateTo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProcessed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProcessed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsConfirmed", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsConfirmed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndReading", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Reset", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Reset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_StartReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "StartReading2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_EndReading2", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "EndReading2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UtilityRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UtilityUnitRate", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 4, "UtilityUnitRate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CompanyID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CompanyID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LocationID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LocationID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsInvoiced", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsInvoiced", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopNo", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ShopName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ShopName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsTaxCustomer", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsTaxCustomer", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Ratio", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Ratio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_AreaInSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "AreaInSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentWIthSCPerSqFt", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWIthSCPerSqFt", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentWithSCPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentWithSCPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "OtherTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxRateID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxRateID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxAmount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "MandatoryTaxAmount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalWithMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalWithMandatoryTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalAmtWithTaxExcludedMandatoryTax", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TotalRentPerMonth", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "TotalRentPerMonth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LevelID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LevelID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsModified", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsModified", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ModifiedDate", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ModifiedDate", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsPerDay", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsPerDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NosDay", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NosDay", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MandatoryTaxCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MandatoryTaxCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_OtherServiceID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "OtherServiceID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ContractName", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ContractName", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ContractName", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_CompanyCode", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_CompanyCode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SAP_PstnDateInDoc", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_PstnDateInDoc", global::System.Data.SqlDbType.Date, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PstnDateInDoc", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_DocHeaderText", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocHeaderText", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_DocType", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_DocType", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey1", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey2", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_RefKey3", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_RefKey3", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_Assignment", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_Assignment", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_PostingKey", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_PostingKey", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SAP_GLACC", global::System.Data.SqlDbType.NVarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SAP_GLACC", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Is_SAPUploaded", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Is_SAPUploaded", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_RentalDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "RentalDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SCDiscount", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 12, 4, "SCDiscount", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_InvoiceState", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceState", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IsProforma", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IsProforma", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IsProforma", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ProfomaNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfomaNo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ProfomaSequenceNo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ProfomaSequenceNo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@InvoiceID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "InvoiceID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=(local);Initial Catalog=AHPL_DB;Persist Security Info=True;User ID=sa" +
                "";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT InvoiceID, InvoiceTypeID, UtilityID, SubInvTypeID, InvoiceNo, SequenceNo, ContractID, ContractRateID, ContractClosureID, Contract_RentSchemeID, InvoiceDate, ProcessYear, ProcessMonth, ExtendedCustomerID, CustomerID, CustomerName, CustomerAddress, CustomerAddress2, DateFrom, DateTo, IsProcessed, IsConfirmed, StartReading, EndReading, Reset, StartReading2, EndReading2, UtilityRateID, UtilityUnitRate, CompanyID, LocationID, Naration, IsInvoiced, ShopID, ShopNo, ShopName, IsTaxCustomer, TaxRegNo, Ratio, AreaInSqFt, RentPerSqFt, SCPerSqFt, RentPerMonth, SCPerMonth, RentWIthSCPerSqFt, RentWithSCPerMonth, TotalAmount, TotalTax, OtherTax, MandatoryTaxID, MandatoryTaxRateID, MandatoryTaxAmount, TotalWithMandatoryTax, TotalAmtWithTaxExcludedMandatoryTax, TotalRentPerMonth, LevelID, IsModified, ModifiedDate, IsPerDay, NosDay, MandatoryTaxCode, OtherServiceID, ContractName, SAP_CompanyCode, SAP_PstnDateInDoc, SAP_DocHeaderText, SAP_DocType, SAP_Text, SAP_RefKey1, SAP_RefKey2, SAP_RefKey3, SAP_Assignment, SAP_PostingKey, SAP_GLACC, Is_SAPUploaded, RentalDiscount, SCDiscount, InvoiceState, IsProforma, ProfomaNo, ProfomaSequenceNo FROM Invoices";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsReports.InvoicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsReports.InvoicesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            dsReports.InvoicesDataTable dataTable = new dsReports.InvoicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsReports.InvoicesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(dsReports dataSet) {
            return this.Adapter.Update(dataSet, "Invoices");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_InvoiceID, 
                    int Original_InvoiceTypeID, 
                    int Original_UtilityID, 
                    int Original_SubInvTypeID, 
                    string Original_InvoiceNo, 
                    int Original_SequenceNo, 
                    int Original_ContractID, 
                    int Original_ContractRateID, 
                    int Original_ContractClosureID, 
                    int Original_Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    int Original_ProcessYear, 
                    int Original_ProcessMonth, 
                    int Original_ExtendedCustomerID, 
                    int Original_CustomerID, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_DateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_DateTo, 
                    bool Original_IsProcessed, 
                    bool Original_IsConfirmed, 
                    decimal Original_StartReading, 
                    decimal Original_EndReading, 
                    bool Original_Reset, 
                    decimal Original_StartReading2, 
                    decimal Original_EndReading2, 
                    int Original_UtilityRateID, 
                    decimal Original_UtilityUnitRate, 
                    int Original_CompanyID, 
                    int Original_LocationID, 
                    bool Original_IsInvoiced, 
                    int Original_ShopID, 
                    string Original_ShopNo, 
                    string Original_ShopName, 
                    bool Original_IsTaxCustomer, 
                    decimal Original_Ratio, 
                    decimal Original_AreaInSqFt, 
                    decimal Original_RentPerSqFt, 
                    decimal Original_SCPerSqFt, 
                    decimal Original_RentPerMonth, 
                    decimal Original_SCPerMonth, 
                    decimal Original_RentWIthSCPerSqFt, 
                    decimal Original_RentWithSCPerMonth, 
                    decimal Original_TotalAmount, 
                    decimal Original_TotalTax, 
                    decimal Original_OtherTax, 
                    int Original_MandatoryTaxID, 
                    int Original_MandatoryTaxRateID, 
                    decimal Original_MandatoryTaxAmount, 
                    decimal Original_TotalWithMandatoryTax, 
                    decimal Original_TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal Original_TotalRentPerMonth, 
                    int Original_LevelID, 
                    bool Original_IsModified, 
                    System.DateTime Original_ModifiedDate, 
                    bool Original_IsPerDay, 
                    int Original_NosDay, 
                    string Original_MandatoryTaxCode, 
                    int Original_OtherServiceID, 
                    string Original_ContractName, 
                    string Original_SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> Original_SAP_PstnDateInDoc, 
                    string Original_SAP_DocHeaderText, 
                    string Original_SAP_DocType, 
                    string Original_SAP_RefKey1, 
                    string Original_SAP_RefKey2, 
                    string Original_SAP_RefKey3, 
                    string Original_SAP_Assignment, 
                    string Original_SAP_PostingKey, 
                    string Original_SAP_GLACC, 
                    bool Original_Is_SAPUploaded, 
                    decimal Original_RentalDiscount, 
                    decimal Original_SCDiscount, 
                    global::System.Nullable<int> Original_InvoiceState, 
                    global::System.Nullable<bool> Original_IsProforma, 
                    string Original_ProfomaNo, 
                    int Original_ProfomaSequenceNo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_InvoiceID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_InvoiceTypeID));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_UtilityID));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_SubInvTypeID));
            if ((Original_InvoiceNo == null)) {
                throw new global::System.ArgumentNullException("Original_InvoiceNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_InvoiceNo));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_SequenceNo));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_ContractID));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_ContractRateID));
            this.Adapter.DeleteCommand.Parameters[8].Value = ((int)(Original_ContractClosureID));
            this.Adapter.DeleteCommand.Parameters[9].Value = ((int)(Original_Contract_RentSchemeID));
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[12].Value = ((int)(Original_ProcessYear));
            this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_ProcessMonth));
            this.Adapter.DeleteCommand.Parameters[14].Value = ((int)(Original_ExtendedCustomerID));
            this.Adapter.DeleteCommand.Parameters[15].Value = ((int)(Original_CustomerID));
            if ((Original_CustomerName == null)) {
                throw new global::System.ArgumentNullException("Original_CustomerName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_CustomerName));
            }
            if ((Original_DateFrom.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((System.DateTime)(Original_DateFrom.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_DateTo.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((System.DateTime)(Original_DateTo.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[21].Value = ((bool)(Original_IsProcessed));
            this.Adapter.DeleteCommand.Parameters[22].Value = ((bool)(Original_IsConfirmed));
            this.Adapter.DeleteCommand.Parameters[23].Value = ((decimal)(Original_StartReading));
            this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_EndReading));
            this.Adapter.DeleteCommand.Parameters[25].Value = ((bool)(Original_Reset));
            this.Adapter.DeleteCommand.Parameters[26].Value = ((decimal)(Original_StartReading2));
            this.Adapter.DeleteCommand.Parameters[27].Value = ((decimal)(Original_EndReading2));
            this.Adapter.DeleteCommand.Parameters[28].Value = ((int)(Original_UtilityRateID));
            this.Adapter.DeleteCommand.Parameters[29].Value = ((decimal)(Original_UtilityUnitRate));
            this.Adapter.DeleteCommand.Parameters[30].Value = ((int)(Original_CompanyID));
            this.Adapter.DeleteCommand.Parameters[31].Value = ((int)(Original_LocationID));
            this.Adapter.DeleteCommand.Parameters[32].Value = ((bool)(Original_IsInvoiced));
            this.Adapter.DeleteCommand.Parameters[33].Value = ((int)(Original_ShopID));
            if ((Original_ShopNo == null)) {
                throw new global::System.ArgumentNullException("Original_ShopNo");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_ShopNo));
            }
            if ((Original_ShopName == null)) {
                throw new global::System.ArgumentNullException("Original_ShopName");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((string)(Original_ShopName));
            }
            this.Adapter.DeleteCommand.Parameters[36].Value = ((bool)(Original_IsTaxCustomer));
            this.Adapter.DeleteCommand.Parameters[37].Value = ((decimal)(Original_Ratio));
            this.Adapter.DeleteCommand.Parameters[38].Value = ((decimal)(Original_AreaInSqFt));
            this.Adapter.DeleteCommand.Parameters[39].Value = ((decimal)(Original_RentPerSqFt));
            this.Adapter.DeleteCommand.Parameters[40].Value = ((decimal)(Original_SCPerSqFt));
            this.Adapter.DeleteCommand.Parameters[41].Value = ((decimal)(Original_RentPerMonth));
            this.Adapter.DeleteCommand.Parameters[42].Value = ((decimal)(Original_SCPerMonth));
            this.Adapter.DeleteCommand.Parameters[43].Value = ((decimal)(Original_RentWIthSCPerSqFt));
            this.Adapter.DeleteCommand.Parameters[44].Value = ((decimal)(Original_RentWithSCPerMonth));
            this.Adapter.DeleteCommand.Parameters[45].Value = ((decimal)(Original_TotalAmount));
            this.Adapter.DeleteCommand.Parameters[46].Value = ((decimal)(Original_TotalTax));
            this.Adapter.DeleteCommand.Parameters[47].Value = ((decimal)(Original_OtherTax));
            this.Adapter.DeleteCommand.Parameters[48].Value = ((int)(Original_MandatoryTaxID));
            this.Adapter.DeleteCommand.Parameters[49].Value = ((int)(Original_MandatoryTaxRateID));
            this.Adapter.DeleteCommand.Parameters[50].Value = ((decimal)(Original_MandatoryTaxAmount));
            this.Adapter.DeleteCommand.Parameters[51].Value = ((decimal)(Original_TotalWithMandatoryTax));
            this.Adapter.DeleteCommand.Parameters[52].Value = ((decimal)(Original_TotalAmtWithTaxExcludedMandatoryTax));
            this.Adapter.DeleteCommand.Parameters[53].Value = ((decimal)(Original_TotalRentPerMonth));
            this.Adapter.DeleteCommand.Parameters[54].Value = ((int)(Original_LevelID));
            this.Adapter.DeleteCommand.Parameters[55].Value = ((bool)(Original_IsModified));
            this.Adapter.DeleteCommand.Parameters[56].Value = ((System.DateTime)(Original_ModifiedDate));
            this.Adapter.DeleteCommand.Parameters[57].Value = ((bool)(Original_IsPerDay));
            this.Adapter.DeleteCommand.Parameters[58].Value = ((int)(Original_NosDay));
            if ((Original_MandatoryTaxCode == null)) {
                throw new global::System.ArgumentNullException("Original_MandatoryTaxCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[59].Value = ((string)(Original_MandatoryTaxCode));
            }
            this.Adapter.DeleteCommand.Parameters[60].Value = ((int)(Original_OtherServiceID));
            if ((Original_ContractName == null)) {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[62].Value = ((string)(Original_ContractName));
            }
            if ((Original_SAP_CompanyCode == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_CompanyCode");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[63].Value = ((string)(Original_SAP_CompanyCode));
            }
            if ((Original_SAP_PstnDateInDoc.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[65].Value = ((System.DateTime)(Original_SAP_PstnDateInDoc.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_SAP_DocHeaderText == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_DocHeaderText");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[66].Value = ((string)(Original_SAP_DocHeaderText));
            }
            if ((Original_SAP_DocType == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_DocType");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[67].Value = ((string)(Original_SAP_DocType));
            }
            if ((Original_SAP_RefKey1 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey1");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[68].Value = ((string)(Original_SAP_RefKey1));
            }
            if ((Original_SAP_RefKey2 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey2");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[69].Value = ((string)(Original_SAP_RefKey2));
            }
            if ((Original_SAP_RefKey3 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey3");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[70].Value = ((string)(Original_SAP_RefKey3));
            }
            if ((Original_SAP_Assignment == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_Assignment");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[71].Value = ((string)(Original_SAP_Assignment));
            }
            if ((Original_SAP_PostingKey == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_PostingKey");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[72].Value = ((string)(Original_SAP_PostingKey));
            }
            if ((Original_SAP_GLACC == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_GLACC");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[73].Value = ((string)(Original_SAP_GLACC));
            }
            this.Adapter.DeleteCommand.Parameters[74].Value = ((bool)(Original_Is_SAPUploaded));
            this.Adapter.DeleteCommand.Parameters[75].Value = ((decimal)(Original_RentalDiscount));
            this.Adapter.DeleteCommand.Parameters[76].Value = ((decimal)(Original_SCDiscount));
            if ((Original_InvoiceState.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[78].Value = ((int)(Original_InvoiceState.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_IsProforma.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[80].Value = ((bool)(Original_IsProforma.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_ProfomaNo == null)) {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[82].Value = ((string)(Original_ProfomaNo));
            }
            this.Adapter.DeleteCommand.Parameters[83].Value = ((int)(Original_ProfomaSequenceNo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int InvoiceTypeID, 
                    int UtilityID, 
                    int SubInvTypeID, 
                    string InvoiceNo, 
                    int SequenceNo, 
                    int ContractID, 
                    int ContractRateID, 
                    int ContractClosureID, 
                    int Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    int ProcessYear, 
                    int ProcessMonth, 
                    int ExtendedCustomerID, 
                    int CustomerID, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerAddress2, 
                    global::System.Nullable<global::System.DateTime> DateFrom, 
                    global::System.Nullable<global::System.DateTime> DateTo, 
                    bool IsProcessed, 
                    bool IsConfirmed, 
                    decimal StartReading, 
                    decimal EndReading, 
                    bool Reset, 
                    decimal StartReading2, 
                    decimal EndReading2, 
                    int UtilityRateID, 
                    decimal UtilityUnitRate, 
                    int CompanyID, 
                    int LocationID, 
                    string Naration, 
                    bool IsInvoiced, 
                    int ShopID, 
                    string ShopNo, 
                    string ShopName, 
                    bool IsTaxCustomer, 
                    string TaxRegNo, 
                    decimal Ratio, 
                    decimal AreaInSqFt, 
                    decimal RentPerSqFt, 
                    decimal SCPerSqFt, 
                    decimal RentPerMonth, 
                    decimal SCPerMonth, 
                    decimal RentWIthSCPerSqFt, 
                    decimal RentWithSCPerMonth, 
                    decimal TotalAmount, 
                    decimal TotalTax, 
                    decimal OtherTax, 
                    int MandatoryTaxID, 
                    int MandatoryTaxRateID, 
                    decimal MandatoryTaxAmount, 
                    decimal TotalWithMandatoryTax, 
                    decimal TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal TotalRentPerMonth, 
                    int LevelID, 
                    bool IsModified, 
                    System.DateTime ModifiedDate, 
                    bool IsPerDay, 
                    int NosDay, 
                    string MandatoryTaxCode, 
                    int OtherServiceID, 
                    string ContractName, 
                    string SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> SAP_PstnDateInDoc, 
                    string SAP_DocHeaderText, 
                    string SAP_DocType, 
                    string SAP_Text, 
                    string SAP_RefKey1, 
                    string SAP_RefKey2, 
                    string SAP_RefKey3, 
                    string SAP_Assignment, 
                    string SAP_PostingKey, 
                    string SAP_GLACC, 
                    bool Is_SAPUploaded, 
                    decimal RentalDiscount, 
                    decimal SCDiscount, 
                    global::System.Nullable<int> InvoiceState, 
                    global::System.Nullable<bool> IsProforma, 
                    string ProfomaNo, 
                    int ProfomaSequenceNo) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(InvoiceTypeID));
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(UtilityID));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(SubInvTypeID));
            if ((InvoiceNo == null)) {
                throw new global::System.ArgumentNullException("InvoiceNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(InvoiceNo));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(SequenceNo));
            this.Adapter.InsertCommand.Parameters[5].Value = ((int)(ContractID));
            this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ContractRateID));
            this.Adapter.InsertCommand.Parameters[7].Value = ((int)(ContractClosureID));
            this.Adapter.InsertCommand.Parameters[8].Value = ((int)(Contract_RentSchemeID));
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[10].Value = ((int)(ProcessYear));
            this.Adapter.InsertCommand.Parameters[11].Value = ((int)(ProcessMonth));
            this.Adapter.InsertCommand.Parameters[12].Value = ((int)(ExtendedCustomerID));
            this.Adapter.InsertCommand.Parameters[13].Value = ((int)(CustomerID));
            if ((CustomerName == null)) {
                throw new global::System.ArgumentNullException("CustomerName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(CustomerName));
            }
            if ((CustomerAddress == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(CustomerAddress));
            }
            if ((CustomerAddress2 == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(CustomerAddress2));
            }
            if ((DateFrom.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((System.DateTime)(DateFrom.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((DateTo.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((System.DateTime)(DateTo.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[19].Value = ((bool)(IsProcessed));
            this.Adapter.InsertCommand.Parameters[20].Value = ((bool)(IsConfirmed));
            this.Adapter.InsertCommand.Parameters[21].Value = ((decimal)(StartReading));
            this.Adapter.InsertCommand.Parameters[22].Value = ((decimal)(EndReading));
            this.Adapter.InsertCommand.Parameters[23].Value = ((bool)(Reset));
            this.Adapter.InsertCommand.Parameters[24].Value = ((decimal)(StartReading2));
            this.Adapter.InsertCommand.Parameters[25].Value = ((decimal)(EndReading2));
            this.Adapter.InsertCommand.Parameters[26].Value = ((int)(UtilityRateID));
            this.Adapter.InsertCommand.Parameters[27].Value = ((decimal)(UtilityUnitRate));
            this.Adapter.InsertCommand.Parameters[28].Value = ((int)(CompanyID));
            this.Adapter.InsertCommand.Parameters[29].Value = ((int)(LocationID));
            if ((Naration == null)) {
                throw new global::System.ArgumentNullException("Naration");
            }
            else {
                this.Adapter.InsertCommand.Parameters[30].Value = ((string)(Naration));
            }
            this.Adapter.InsertCommand.Parameters[31].Value = ((bool)(IsInvoiced));
            this.Adapter.InsertCommand.Parameters[32].Value = ((int)(ShopID));
            if ((ShopNo == null)) {
                throw new global::System.ArgumentNullException("ShopNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[33].Value = ((string)(ShopNo));
            }
            if ((ShopName == null)) {
                throw new global::System.ArgumentNullException("ShopName");
            }
            else {
                this.Adapter.InsertCommand.Parameters[34].Value = ((string)(ShopName));
            }
            this.Adapter.InsertCommand.Parameters[35].Value = ((bool)(IsTaxCustomer));
            if ((TaxRegNo == null)) {
                throw new global::System.ArgumentNullException("TaxRegNo");
            }
            else {
                this.Adapter.InsertCommand.Parameters[36].Value = ((string)(TaxRegNo));
            }
            this.Adapter.InsertCommand.Parameters[37].Value = ((decimal)(Ratio));
            this.Adapter.InsertCommand.Parameters[38].Value = ((decimal)(AreaInSqFt));
            this.Adapter.InsertCommand.Parameters[39].Value = ((decimal)(RentPerSqFt));
            this.Adapter.InsertCommand.Parameters[40].Value = ((decimal)(SCPerSqFt));
            this.Adapter.InsertCommand.Parameters[41].Value = ((decimal)(RentPerMonth));
            this.Adapter.InsertCommand.Parameters[42].Value = ((decimal)(SCPerMonth));
            this.Adapter.InsertCommand.Parameters[43].Value = ((decimal)(RentWIthSCPerSqFt));
            this.Adapter.InsertCommand.Parameters[44].Value = ((decimal)(RentWithSCPerMonth));
            this.Adapter.InsertCommand.Parameters[45].Value = ((decimal)(TotalAmount));
            this.Adapter.InsertCommand.Parameters[46].Value = ((decimal)(TotalTax));
            this.Adapter.InsertCommand.Parameters[47].Value = ((decimal)(OtherTax));
            this.Adapter.InsertCommand.Parameters[48].Value = ((int)(MandatoryTaxID));
            this.Adapter.InsertCommand.Parameters[49].Value = ((int)(MandatoryTaxRateID));
            this.Adapter.InsertCommand.Parameters[50].Value = ((decimal)(MandatoryTaxAmount));
            this.Adapter.InsertCommand.Parameters[51].Value = ((decimal)(TotalWithMandatoryTax));
            this.Adapter.InsertCommand.Parameters[52].Value = ((decimal)(TotalAmtWithTaxExcludedMandatoryTax));
            this.Adapter.InsertCommand.Parameters[53].Value = ((decimal)(TotalRentPerMonth));
            this.Adapter.InsertCommand.Parameters[54].Value = ((int)(LevelID));
            this.Adapter.InsertCommand.Parameters[55].Value = ((bool)(IsModified));
            this.Adapter.InsertCommand.Parameters[56].Value = ((System.DateTime)(ModifiedDate));
            this.Adapter.InsertCommand.Parameters[57].Value = ((bool)(IsPerDay));
            this.Adapter.InsertCommand.Parameters[58].Value = ((int)(NosDay));
            if ((MandatoryTaxCode == null)) {
                throw new global::System.ArgumentNullException("MandatoryTaxCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[59].Value = ((string)(MandatoryTaxCode));
            }
            this.Adapter.InsertCommand.Parameters[60].Value = ((int)(OtherServiceID));
            if ((ContractName == null)) {
                this.Adapter.InsertCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[61].Value = ((string)(ContractName));
            }
            if ((SAP_CompanyCode == null)) {
                throw new global::System.ArgumentNullException("SAP_CompanyCode");
            }
            else {
                this.Adapter.InsertCommand.Parameters[62].Value = ((string)(SAP_CompanyCode));
            }
            if ((SAP_PstnDateInDoc.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[63].Value = ((System.DateTime)(SAP_PstnDateInDoc.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((SAP_DocHeaderText == null)) {
                throw new global::System.ArgumentNullException("SAP_DocHeaderText");
            }
            else {
                this.Adapter.InsertCommand.Parameters[64].Value = ((string)(SAP_DocHeaderText));
            }
            if ((SAP_DocType == null)) {
                throw new global::System.ArgumentNullException("SAP_DocType");
            }
            else {
                this.Adapter.InsertCommand.Parameters[65].Value = ((string)(SAP_DocType));
            }
            if ((SAP_Text == null)) {
                throw new global::System.ArgumentNullException("SAP_Text");
            }
            else {
                this.Adapter.InsertCommand.Parameters[66].Value = ((string)(SAP_Text));
            }
            if ((SAP_RefKey1 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey1");
            }
            else {
                this.Adapter.InsertCommand.Parameters[67].Value = ((string)(SAP_RefKey1));
            }
            if ((SAP_RefKey2 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey2");
            }
            else {
                this.Adapter.InsertCommand.Parameters[68].Value = ((string)(SAP_RefKey2));
            }
            if ((SAP_RefKey3 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey3");
            }
            else {
                this.Adapter.InsertCommand.Parameters[69].Value = ((string)(SAP_RefKey3));
            }
            if ((SAP_Assignment == null)) {
                throw new global::System.ArgumentNullException("SAP_Assignment");
            }
            else {
                this.Adapter.InsertCommand.Parameters[70].Value = ((string)(SAP_Assignment));
            }
            if ((SAP_PostingKey == null)) {
                throw new global::System.ArgumentNullException("SAP_PostingKey");
            }
            else {
                this.Adapter.InsertCommand.Parameters[71].Value = ((string)(SAP_PostingKey));
            }
            if ((SAP_GLACC == null)) {
                throw new global::System.ArgumentNullException("SAP_GLACC");
            }
            else {
                this.Adapter.InsertCommand.Parameters[72].Value = ((string)(SAP_GLACC));
            }
            this.Adapter.InsertCommand.Parameters[73].Value = ((bool)(Is_SAPUploaded));
            this.Adapter.InsertCommand.Parameters[74].Value = ((decimal)(RentalDiscount));
            this.Adapter.InsertCommand.Parameters[75].Value = ((decimal)(SCDiscount));
            if ((InvoiceState.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[76].Value = ((int)(InvoiceState.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((IsProforma.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[77].Value = ((bool)(IsProforma.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((ProfomaNo == null)) {
                this.Adapter.InsertCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[78].Value = ((string)(ProfomaNo));
            }
            this.Adapter.InsertCommand.Parameters[79].Value = ((int)(ProfomaSequenceNo));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int InvoiceTypeID, 
                    int UtilityID, 
                    int SubInvTypeID, 
                    string InvoiceNo, 
                    int SequenceNo, 
                    int ContractID, 
                    int ContractRateID, 
                    int ContractClosureID, 
                    int Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    int ProcessYear, 
                    int ProcessMonth, 
                    int ExtendedCustomerID, 
                    int CustomerID, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerAddress2, 
                    global::System.Nullable<global::System.DateTime> DateFrom, 
                    global::System.Nullable<global::System.DateTime> DateTo, 
                    bool IsProcessed, 
                    bool IsConfirmed, 
                    decimal StartReading, 
                    decimal EndReading, 
                    bool Reset, 
                    decimal StartReading2, 
                    decimal EndReading2, 
                    int UtilityRateID, 
                    decimal UtilityUnitRate, 
                    int CompanyID, 
                    int LocationID, 
                    string Naration, 
                    bool IsInvoiced, 
                    int ShopID, 
                    string ShopNo, 
                    string ShopName, 
                    bool IsTaxCustomer, 
                    string TaxRegNo, 
                    decimal Ratio, 
                    decimal AreaInSqFt, 
                    decimal RentPerSqFt, 
                    decimal SCPerSqFt, 
                    decimal RentPerMonth, 
                    decimal SCPerMonth, 
                    decimal RentWIthSCPerSqFt, 
                    decimal RentWithSCPerMonth, 
                    decimal TotalAmount, 
                    decimal TotalTax, 
                    decimal OtherTax, 
                    int MandatoryTaxID, 
                    int MandatoryTaxRateID, 
                    decimal MandatoryTaxAmount, 
                    decimal TotalWithMandatoryTax, 
                    decimal TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal TotalRentPerMonth, 
                    int LevelID, 
                    bool IsModified, 
                    System.DateTime ModifiedDate, 
                    bool IsPerDay, 
                    int NosDay, 
                    string MandatoryTaxCode, 
                    int OtherServiceID, 
                    string ContractName, 
                    string SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> SAP_PstnDateInDoc, 
                    string SAP_DocHeaderText, 
                    string SAP_DocType, 
                    string SAP_Text, 
                    string SAP_RefKey1, 
                    string SAP_RefKey2, 
                    string SAP_RefKey3, 
                    string SAP_Assignment, 
                    string SAP_PostingKey, 
                    string SAP_GLACC, 
                    bool Is_SAPUploaded, 
                    decimal RentalDiscount, 
                    decimal SCDiscount, 
                    global::System.Nullable<int> InvoiceState, 
                    global::System.Nullable<bool> IsProforma, 
                    string ProfomaNo, 
                    int ProfomaSequenceNo, 
                    int Original_InvoiceID, 
                    int Original_InvoiceTypeID, 
                    int Original_UtilityID, 
                    int Original_SubInvTypeID, 
                    string Original_InvoiceNo, 
                    int Original_SequenceNo, 
                    int Original_ContractID, 
                    int Original_ContractRateID, 
                    int Original_ContractClosureID, 
                    int Original_Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    int Original_ProcessYear, 
                    int Original_ProcessMonth, 
                    int Original_ExtendedCustomerID, 
                    int Original_CustomerID, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_DateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_DateTo, 
                    bool Original_IsProcessed, 
                    bool Original_IsConfirmed, 
                    decimal Original_StartReading, 
                    decimal Original_EndReading, 
                    bool Original_Reset, 
                    decimal Original_StartReading2, 
                    decimal Original_EndReading2, 
                    int Original_UtilityRateID, 
                    decimal Original_UtilityUnitRate, 
                    int Original_CompanyID, 
                    int Original_LocationID, 
                    bool Original_IsInvoiced, 
                    int Original_ShopID, 
                    string Original_ShopNo, 
                    string Original_ShopName, 
                    bool Original_IsTaxCustomer, 
                    decimal Original_Ratio, 
                    decimal Original_AreaInSqFt, 
                    decimal Original_RentPerSqFt, 
                    decimal Original_SCPerSqFt, 
                    decimal Original_RentPerMonth, 
                    decimal Original_SCPerMonth, 
                    decimal Original_RentWIthSCPerSqFt, 
                    decimal Original_RentWithSCPerMonth, 
                    decimal Original_TotalAmount, 
                    decimal Original_TotalTax, 
                    decimal Original_OtherTax, 
                    int Original_MandatoryTaxID, 
                    int Original_MandatoryTaxRateID, 
                    decimal Original_MandatoryTaxAmount, 
                    decimal Original_TotalWithMandatoryTax, 
                    decimal Original_TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal Original_TotalRentPerMonth, 
                    int Original_LevelID, 
                    bool Original_IsModified, 
                    System.DateTime Original_ModifiedDate, 
                    bool Original_IsPerDay, 
                    int Original_NosDay, 
                    string Original_MandatoryTaxCode, 
                    int Original_OtherServiceID, 
                    string Original_ContractName, 
                    string Original_SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> Original_SAP_PstnDateInDoc, 
                    string Original_SAP_DocHeaderText, 
                    string Original_SAP_DocType, 
                    string Original_SAP_RefKey1, 
                    string Original_SAP_RefKey2, 
                    string Original_SAP_RefKey3, 
                    string Original_SAP_Assignment, 
                    string Original_SAP_PostingKey, 
                    string Original_SAP_GLACC, 
                    bool Original_Is_SAPUploaded, 
                    decimal Original_RentalDiscount, 
                    decimal Original_SCDiscount, 
                    global::System.Nullable<int> Original_InvoiceState, 
                    global::System.Nullable<bool> Original_IsProforma, 
                    string Original_ProfomaNo, 
                    int Original_ProfomaSequenceNo, 
                    int InvoiceID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(InvoiceTypeID));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(UtilityID));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(SubInvTypeID));
            if ((InvoiceNo == null)) {
                throw new global::System.ArgumentNullException("InvoiceNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(InvoiceNo));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(SequenceNo));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ContractID));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ContractRateID));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ContractClosureID));
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Contract_RentSchemeID));
            if ((InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ProcessYear));
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(ProcessMonth));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(ExtendedCustomerID));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(CustomerID));
            if ((CustomerName == null)) {
                throw new global::System.ArgumentNullException("CustomerName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(CustomerName));
            }
            if ((CustomerAddress == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(CustomerAddress));
            }
            if ((CustomerAddress2 == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(CustomerAddress2));
            }
            if ((DateFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((System.DateTime)(DateFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((DateTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((System.DateTime)(DateTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((bool)(IsProcessed));
            this.Adapter.UpdateCommand.Parameters[20].Value = ((bool)(IsConfirmed));
            this.Adapter.UpdateCommand.Parameters[21].Value = ((decimal)(StartReading));
            this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(EndReading));
            this.Adapter.UpdateCommand.Parameters[23].Value = ((bool)(Reset));
            this.Adapter.UpdateCommand.Parameters[24].Value = ((decimal)(StartReading2));
            this.Adapter.UpdateCommand.Parameters[25].Value = ((decimal)(EndReading2));
            this.Adapter.UpdateCommand.Parameters[26].Value = ((int)(UtilityRateID));
            this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(UtilityUnitRate));
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(CompanyID));
            this.Adapter.UpdateCommand.Parameters[29].Value = ((int)(LocationID));
            if ((Naration == null)) {
                throw new global::System.ArgumentNullException("Naration");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Naration));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((bool)(IsInvoiced));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((int)(ShopID));
            if ((ShopNo == null)) {
                throw new global::System.ArgumentNullException("ShopNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(ShopNo));
            }
            if ((ShopName == null)) {
                throw new global::System.ArgumentNullException("ShopName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(ShopName));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((bool)(IsTaxCustomer));
            if ((TaxRegNo == null)) {
                throw new global::System.ArgumentNullException("TaxRegNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(TaxRegNo));
            }
            this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Ratio));
            this.Adapter.UpdateCommand.Parameters[38].Value = ((decimal)(AreaInSqFt));
            this.Adapter.UpdateCommand.Parameters[39].Value = ((decimal)(RentPerSqFt));
            this.Adapter.UpdateCommand.Parameters[40].Value = ((decimal)(SCPerSqFt));
            this.Adapter.UpdateCommand.Parameters[41].Value = ((decimal)(RentPerMonth));
            this.Adapter.UpdateCommand.Parameters[42].Value = ((decimal)(SCPerMonth));
            this.Adapter.UpdateCommand.Parameters[43].Value = ((decimal)(RentWIthSCPerSqFt));
            this.Adapter.UpdateCommand.Parameters[44].Value = ((decimal)(RentWithSCPerMonth));
            this.Adapter.UpdateCommand.Parameters[45].Value = ((decimal)(TotalAmount));
            this.Adapter.UpdateCommand.Parameters[46].Value = ((decimal)(TotalTax));
            this.Adapter.UpdateCommand.Parameters[47].Value = ((decimal)(OtherTax));
            this.Adapter.UpdateCommand.Parameters[48].Value = ((int)(MandatoryTaxID));
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(MandatoryTaxRateID));
            this.Adapter.UpdateCommand.Parameters[50].Value = ((decimal)(MandatoryTaxAmount));
            this.Adapter.UpdateCommand.Parameters[51].Value = ((decimal)(TotalWithMandatoryTax));
            this.Adapter.UpdateCommand.Parameters[52].Value = ((decimal)(TotalAmtWithTaxExcludedMandatoryTax));
            this.Adapter.UpdateCommand.Parameters[53].Value = ((decimal)(TotalRentPerMonth));
            this.Adapter.UpdateCommand.Parameters[54].Value = ((int)(LevelID));
            this.Adapter.UpdateCommand.Parameters[55].Value = ((bool)(IsModified));
            this.Adapter.UpdateCommand.Parameters[56].Value = ((System.DateTime)(ModifiedDate));
            this.Adapter.UpdateCommand.Parameters[57].Value = ((bool)(IsPerDay));
            this.Adapter.UpdateCommand.Parameters[58].Value = ((int)(NosDay));
            if ((MandatoryTaxCode == null)) {
                throw new global::System.ArgumentNullException("MandatoryTaxCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((string)(MandatoryTaxCode));
            }
            this.Adapter.UpdateCommand.Parameters[60].Value = ((int)(OtherServiceID));
            if ((ContractName == null)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((string)(ContractName));
            }
            if ((SAP_CompanyCode == null)) {
                throw new global::System.ArgumentNullException("SAP_CompanyCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((string)(SAP_CompanyCode));
            }
            if ((SAP_PstnDateInDoc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((System.DateTime)(SAP_PstnDateInDoc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((SAP_DocHeaderText == null)) {
                throw new global::System.ArgumentNullException("SAP_DocHeaderText");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((string)(SAP_DocHeaderText));
            }
            if ((SAP_DocType == null)) {
                throw new global::System.ArgumentNullException("SAP_DocType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((string)(SAP_DocType));
            }
            if ((SAP_Text == null)) {
                throw new global::System.ArgumentNullException("SAP_Text");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((string)(SAP_Text));
            }
            if ((SAP_RefKey1 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((string)(SAP_RefKey1));
            }
            if ((SAP_RefKey2 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((string)(SAP_RefKey2));
            }
            if ((SAP_RefKey3 == null)) {
                throw new global::System.ArgumentNullException("SAP_RefKey3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((string)(SAP_RefKey3));
            }
            if ((SAP_Assignment == null)) {
                throw new global::System.ArgumentNullException("SAP_Assignment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((string)(SAP_Assignment));
            }
            if ((SAP_PostingKey == null)) {
                throw new global::System.ArgumentNullException("SAP_PostingKey");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((string)(SAP_PostingKey));
            }
            if ((SAP_GLACC == null)) {
                throw new global::System.ArgumentNullException("SAP_GLACC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((string)(SAP_GLACC));
            }
            this.Adapter.UpdateCommand.Parameters[73].Value = ((bool)(Is_SAPUploaded));
            this.Adapter.UpdateCommand.Parameters[74].Value = ((decimal)(RentalDiscount));
            this.Adapter.UpdateCommand.Parameters[75].Value = ((decimal)(SCDiscount));
            if ((InvoiceState.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((int)(InvoiceState.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((IsProforma.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((bool)(IsProforma.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((ProfomaNo == null)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((string)(ProfomaNo));
            }
            this.Adapter.UpdateCommand.Parameters[79].Value = ((int)(ProfomaSequenceNo));
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Original_InvoiceID));
            this.Adapter.UpdateCommand.Parameters[81].Value = ((int)(Original_InvoiceTypeID));
            this.Adapter.UpdateCommand.Parameters[82].Value = ((int)(Original_UtilityID));
            this.Adapter.UpdateCommand.Parameters[83].Value = ((int)(Original_SubInvTypeID));
            if ((Original_InvoiceNo == null)) {
                throw new global::System.ArgumentNullException("Original_InvoiceNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[84].Value = ((string)(Original_InvoiceNo));
            }
            this.Adapter.UpdateCommand.Parameters[85].Value = ((int)(Original_SequenceNo));
            this.Adapter.UpdateCommand.Parameters[86].Value = ((int)(Original_ContractID));
            this.Adapter.UpdateCommand.Parameters[87].Value = ((int)(Original_ContractRateID));
            this.Adapter.UpdateCommand.Parameters[88].Value = ((int)(Original_ContractClosureID));
            this.Adapter.UpdateCommand.Parameters[89].Value = ((int)(Original_Contract_RentSchemeID));
            if ((Original_InvoiceDate.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[91].Value = ((System.DateTime)(Original_InvoiceDate.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[90].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[91].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[92].Value = ((int)(Original_ProcessYear));
            this.Adapter.UpdateCommand.Parameters[93].Value = ((int)(Original_ProcessMonth));
            this.Adapter.UpdateCommand.Parameters[94].Value = ((int)(Original_ExtendedCustomerID));
            this.Adapter.UpdateCommand.Parameters[95].Value = ((int)(Original_CustomerID));
            if ((Original_CustomerName == null)) {
                throw new global::System.ArgumentNullException("Original_CustomerName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[96].Value = ((string)(Original_CustomerName));
            }
            if ((Original_DateFrom.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[98].Value = ((System.DateTime)(Original_DateFrom.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[97].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[98].Value = global::System.DBNull.Value;
            }
            if ((Original_DateTo.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[100].Value = ((System.DateTime)(Original_DateTo.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[99].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[100].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[101].Value = ((bool)(Original_IsProcessed));
            this.Adapter.UpdateCommand.Parameters[102].Value = ((bool)(Original_IsConfirmed));
            this.Adapter.UpdateCommand.Parameters[103].Value = ((decimal)(Original_StartReading));
            this.Adapter.UpdateCommand.Parameters[104].Value = ((decimal)(Original_EndReading));
            this.Adapter.UpdateCommand.Parameters[105].Value = ((bool)(Original_Reset));
            this.Adapter.UpdateCommand.Parameters[106].Value = ((decimal)(Original_StartReading2));
            this.Adapter.UpdateCommand.Parameters[107].Value = ((decimal)(Original_EndReading2));
            this.Adapter.UpdateCommand.Parameters[108].Value = ((int)(Original_UtilityRateID));
            this.Adapter.UpdateCommand.Parameters[109].Value = ((decimal)(Original_UtilityUnitRate));
            this.Adapter.UpdateCommand.Parameters[110].Value = ((int)(Original_CompanyID));
            this.Adapter.UpdateCommand.Parameters[111].Value = ((int)(Original_LocationID));
            this.Adapter.UpdateCommand.Parameters[112].Value = ((bool)(Original_IsInvoiced));
            this.Adapter.UpdateCommand.Parameters[113].Value = ((int)(Original_ShopID));
            if ((Original_ShopNo == null)) {
                throw new global::System.ArgumentNullException("Original_ShopNo");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[114].Value = ((string)(Original_ShopNo));
            }
            if ((Original_ShopName == null)) {
                throw new global::System.ArgumentNullException("Original_ShopName");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[115].Value = ((string)(Original_ShopName));
            }
            this.Adapter.UpdateCommand.Parameters[116].Value = ((bool)(Original_IsTaxCustomer));
            this.Adapter.UpdateCommand.Parameters[117].Value = ((decimal)(Original_Ratio));
            this.Adapter.UpdateCommand.Parameters[118].Value = ((decimal)(Original_AreaInSqFt));
            this.Adapter.UpdateCommand.Parameters[119].Value = ((decimal)(Original_RentPerSqFt));
            this.Adapter.UpdateCommand.Parameters[120].Value = ((decimal)(Original_SCPerSqFt));
            this.Adapter.UpdateCommand.Parameters[121].Value = ((decimal)(Original_RentPerMonth));
            this.Adapter.UpdateCommand.Parameters[122].Value = ((decimal)(Original_SCPerMonth));
            this.Adapter.UpdateCommand.Parameters[123].Value = ((decimal)(Original_RentWIthSCPerSqFt));
            this.Adapter.UpdateCommand.Parameters[124].Value = ((decimal)(Original_RentWithSCPerMonth));
            this.Adapter.UpdateCommand.Parameters[125].Value = ((decimal)(Original_TotalAmount));
            this.Adapter.UpdateCommand.Parameters[126].Value = ((decimal)(Original_TotalTax));
            this.Adapter.UpdateCommand.Parameters[127].Value = ((decimal)(Original_OtherTax));
            this.Adapter.UpdateCommand.Parameters[128].Value = ((int)(Original_MandatoryTaxID));
            this.Adapter.UpdateCommand.Parameters[129].Value = ((int)(Original_MandatoryTaxRateID));
            this.Adapter.UpdateCommand.Parameters[130].Value = ((decimal)(Original_MandatoryTaxAmount));
            this.Adapter.UpdateCommand.Parameters[131].Value = ((decimal)(Original_TotalWithMandatoryTax));
            this.Adapter.UpdateCommand.Parameters[132].Value = ((decimal)(Original_TotalAmtWithTaxExcludedMandatoryTax));
            this.Adapter.UpdateCommand.Parameters[133].Value = ((decimal)(Original_TotalRentPerMonth));
            this.Adapter.UpdateCommand.Parameters[134].Value = ((int)(Original_LevelID));
            this.Adapter.UpdateCommand.Parameters[135].Value = ((bool)(Original_IsModified));
            this.Adapter.UpdateCommand.Parameters[136].Value = ((System.DateTime)(Original_ModifiedDate));
            this.Adapter.UpdateCommand.Parameters[137].Value = ((bool)(Original_IsPerDay));
            this.Adapter.UpdateCommand.Parameters[138].Value = ((int)(Original_NosDay));
            if ((Original_MandatoryTaxCode == null)) {
                throw new global::System.ArgumentNullException("Original_MandatoryTaxCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[139].Value = ((string)(Original_MandatoryTaxCode));
            }
            this.Adapter.UpdateCommand.Parameters[140].Value = ((int)(Original_OtherServiceID));
            if ((Original_ContractName == null)) {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[142].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[141].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[142].Value = ((string)(Original_ContractName));
            }
            if ((Original_SAP_CompanyCode == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_CompanyCode");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[143].Value = ((string)(Original_SAP_CompanyCode));
            }
            if ((Original_SAP_PstnDateInDoc.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[145].Value = ((System.DateTime)(Original_SAP_PstnDateInDoc.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[144].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[145].Value = global::System.DBNull.Value;
            }
            if ((Original_SAP_DocHeaderText == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_DocHeaderText");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[146].Value = ((string)(Original_SAP_DocHeaderText));
            }
            if ((Original_SAP_DocType == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_DocType");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[147].Value = ((string)(Original_SAP_DocType));
            }
            if ((Original_SAP_RefKey1 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey1");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[148].Value = ((string)(Original_SAP_RefKey1));
            }
            if ((Original_SAP_RefKey2 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey2");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[149].Value = ((string)(Original_SAP_RefKey2));
            }
            if ((Original_SAP_RefKey3 == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_RefKey3");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[150].Value = ((string)(Original_SAP_RefKey3));
            }
            if ((Original_SAP_Assignment == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_Assignment");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[151].Value = ((string)(Original_SAP_Assignment));
            }
            if ((Original_SAP_PostingKey == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_PostingKey");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[152].Value = ((string)(Original_SAP_PostingKey));
            }
            if ((Original_SAP_GLACC == null)) {
                throw new global::System.ArgumentNullException("Original_SAP_GLACC");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[153].Value = ((string)(Original_SAP_GLACC));
            }
            this.Adapter.UpdateCommand.Parameters[154].Value = ((bool)(Original_Is_SAPUploaded));
            this.Adapter.UpdateCommand.Parameters[155].Value = ((decimal)(Original_RentalDiscount));
            this.Adapter.UpdateCommand.Parameters[156].Value = ((decimal)(Original_SCDiscount));
            if ((Original_InvoiceState.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[158].Value = ((int)(Original_InvoiceState.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[157].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[158].Value = global::System.DBNull.Value;
            }
            if ((Original_IsProforma.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[160].Value = ((bool)(Original_IsProforma.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[159].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[160].Value = global::System.DBNull.Value;
            }
            if ((Original_ProfomaNo == null)) {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[162].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[161].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[162].Value = ((string)(Original_ProfomaNo));
            }
            this.Adapter.UpdateCommand.Parameters[163].Value = ((int)(Original_ProfomaSequenceNo));
            this.Adapter.UpdateCommand.Parameters[164].Value = ((int)(InvoiceID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int InvoiceTypeID, 
                    int UtilityID, 
                    int SubInvTypeID, 
                    string InvoiceNo, 
                    int SequenceNo, 
                    int ContractID, 
                    int ContractRateID, 
                    int ContractClosureID, 
                    int Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> InvoiceDate, 
                    int ProcessYear, 
                    int ProcessMonth, 
                    int ExtendedCustomerID, 
                    int CustomerID, 
                    string CustomerName, 
                    string CustomerAddress, 
                    string CustomerAddress2, 
                    global::System.Nullable<global::System.DateTime> DateFrom, 
                    global::System.Nullable<global::System.DateTime> DateTo, 
                    bool IsProcessed, 
                    bool IsConfirmed, 
                    decimal StartReading, 
                    decimal EndReading, 
                    bool Reset, 
                    decimal StartReading2, 
                    decimal EndReading2, 
                    int UtilityRateID, 
                    decimal UtilityUnitRate, 
                    int CompanyID, 
                    int LocationID, 
                    string Naration, 
                    bool IsInvoiced, 
                    int ShopID, 
                    string ShopNo, 
                    string ShopName, 
                    bool IsTaxCustomer, 
                    string TaxRegNo, 
                    decimal Ratio, 
                    decimal AreaInSqFt, 
                    decimal RentPerSqFt, 
                    decimal SCPerSqFt, 
                    decimal RentPerMonth, 
                    decimal SCPerMonth, 
                    decimal RentWIthSCPerSqFt, 
                    decimal RentWithSCPerMonth, 
                    decimal TotalAmount, 
                    decimal TotalTax, 
                    decimal OtherTax, 
                    int MandatoryTaxID, 
                    int MandatoryTaxRateID, 
                    decimal MandatoryTaxAmount, 
                    decimal TotalWithMandatoryTax, 
                    decimal TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal TotalRentPerMonth, 
                    int LevelID, 
                    bool IsModified, 
                    System.DateTime ModifiedDate, 
                    bool IsPerDay, 
                    int NosDay, 
                    string MandatoryTaxCode, 
                    int OtherServiceID, 
                    string ContractName, 
                    string SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> SAP_PstnDateInDoc, 
                    string SAP_DocHeaderText, 
                    string SAP_DocType, 
                    string SAP_Text, 
                    string SAP_RefKey1, 
                    string SAP_RefKey2, 
                    string SAP_RefKey3, 
                    string SAP_Assignment, 
                    string SAP_PostingKey, 
                    string SAP_GLACC, 
                    bool Is_SAPUploaded, 
                    decimal RentalDiscount, 
                    decimal SCDiscount, 
                    global::System.Nullable<int> InvoiceState, 
                    global::System.Nullable<bool> IsProforma, 
                    string ProfomaNo, 
                    int ProfomaSequenceNo, 
                    int Original_InvoiceID, 
                    int Original_InvoiceTypeID, 
                    int Original_UtilityID, 
                    int Original_SubInvTypeID, 
                    string Original_InvoiceNo, 
                    int Original_SequenceNo, 
                    int Original_ContractID, 
                    int Original_ContractRateID, 
                    int Original_ContractClosureID, 
                    int Original_Contract_RentSchemeID, 
                    global::System.Nullable<global::System.DateTime> Original_InvoiceDate, 
                    int Original_ProcessYear, 
                    int Original_ProcessMonth, 
                    int Original_ExtendedCustomerID, 
                    int Original_CustomerID, 
                    string Original_CustomerName, 
                    global::System.Nullable<global::System.DateTime> Original_DateFrom, 
                    global::System.Nullable<global::System.DateTime> Original_DateTo, 
                    bool Original_IsProcessed, 
                    bool Original_IsConfirmed, 
                    decimal Original_StartReading, 
                    decimal Original_EndReading, 
                    bool Original_Reset, 
                    decimal Original_StartReading2, 
                    decimal Original_EndReading2, 
                    int Original_UtilityRateID, 
                    decimal Original_UtilityUnitRate, 
                    int Original_CompanyID, 
                    int Original_LocationID, 
                    bool Original_IsInvoiced, 
                    int Original_ShopID, 
                    string Original_ShopNo, 
                    string Original_ShopName, 
                    bool Original_IsTaxCustomer, 
                    decimal Original_Ratio, 
                    decimal Original_AreaInSqFt, 
                    decimal Original_RentPerSqFt, 
                    decimal Original_SCPerSqFt, 
                    decimal Original_RentPerMonth, 
                    decimal Original_SCPerMonth, 
                    decimal Original_RentWIthSCPerSqFt, 
                    decimal Original_RentWithSCPerMonth, 
                    decimal Original_TotalAmount, 
                    decimal Original_TotalTax, 
                    decimal Original_OtherTax, 
                    int Original_MandatoryTaxID, 
                    int Original_MandatoryTaxRateID, 
                    decimal Original_MandatoryTaxAmount, 
                    decimal Original_TotalWithMandatoryTax, 
                    decimal Original_TotalAmtWithTaxExcludedMandatoryTax, 
                    decimal Original_TotalRentPerMonth, 
                    int Original_LevelID, 
                    bool Original_IsModified, 
                    System.DateTime Original_ModifiedDate, 
                    bool Original_IsPerDay, 
                    int Original_NosDay, 
                    string Original_MandatoryTaxCode, 
                    int Original_OtherServiceID, 
                    string Original_ContractName, 
                    string Original_SAP_CompanyCode, 
                    global::System.Nullable<global::System.DateTime> Original_SAP_PstnDateInDoc, 
                    string Original_SAP_DocHeaderText, 
                    string Original_SAP_DocType, 
                    string Original_SAP_RefKey1, 
                    string Original_SAP_RefKey2, 
                    string Original_SAP_RefKey3, 
                    string Original_SAP_Assignment, 
                    string Original_SAP_PostingKey, 
                    string Original_SAP_GLACC, 
                    bool Original_Is_SAPUploaded, 
                    decimal Original_RentalDiscount, 
                    decimal Original_SCDiscount, 
                    global::System.Nullable<int> Original_InvoiceState, 
                    global::System.Nullable<bool> Original_IsProforma, 
                    string Original_ProfomaNo, 
                    int Original_ProfomaSequenceNo) {
            return this.Update(InvoiceTypeID, UtilityID, SubInvTypeID, InvoiceNo, SequenceNo, ContractID, ContractRateID, ContractClosureID, Contract_RentSchemeID, InvoiceDate, ProcessYear, ProcessMonth, ExtendedCustomerID, CustomerID, CustomerName, CustomerAddress, CustomerAddress2, DateFrom, DateTo, IsProcessed, IsConfirmed, StartReading, EndReading, Reset, StartReading2, EndReading2, UtilityRateID, UtilityUnitRate, CompanyID, LocationID, Naration, IsInvoiced, ShopID, ShopNo, ShopName, IsTaxCustomer, TaxRegNo, Ratio, AreaInSqFt, RentPerSqFt, SCPerSqFt, RentPerMonth, SCPerMonth, RentWIthSCPerSqFt, RentWithSCPerMonth, TotalAmount, TotalTax, OtherTax, MandatoryTaxID, MandatoryTaxRateID, MandatoryTaxAmount, TotalWithMandatoryTax, TotalAmtWithTaxExcludedMandatoryTax, TotalRentPerMonth, LevelID, IsModified, ModifiedDate, IsPerDay, NosDay, MandatoryTaxCode, OtherServiceID, ContractName, SAP_CompanyCode, SAP_PstnDateInDoc, SAP_DocHeaderText, SAP_DocType, SAP_Text, SAP_RefKey1, SAP_RefKey2, SAP_RefKey3, SAP_Assignment, SAP_PostingKey, SAP_GLACC, Is_SAPUploaded, RentalDiscount, SCDiscount, InvoiceState, IsProforma, ProfomaNo, ProfomaSequenceNo, Original_InvoiceID, Original_InvoiceTypeID, Original_UtilityID, Original_SubInvTypeID, Original_InvoiceNo, Original_SequenceNo, Original_ContractID, Original_ContractRateID, Original_ContractClosureID, Original_Contract_RentSchemeID, Original_InvoiceDate, Original_ProcessYear, Original_ProcessMonth, Original_ExtendedCustomerID, Original_CustomerID, Original_CustomerName, Original_DateFrom, Original_DateTo, Original_IsProcessed, Original_IsConfirmed, Original_StartReading, Original_EndReading, Original_Reset, Original_StartReading2, Original_EndReading2, Original_UtilityRateID, Original_UtilityUnitRate, Original_CompanyID, Original_LocationID, Original_IsInvoiced, Original_ShopID, Original_ShopNo, Original_ShopName, Original_IsTaxCustomer, Original_Ratio, Original_AreaInSqFt, Original_RentPerSqFt, Original_SCPerSqFt, Original_RentPerMonth, Original_SCPerMonth, Original_RentWIthSCPerSqFt, Original_RentWithSCPerMonth, Original_TotalAmount, Original_TotalTax, Original_OtherTax, Original_MandatoryTaxID, Original_MandatoryTaxRateID, Original_MandatoryTaxAmount, Original_TotalWithMandatoryTax, Original_TotalAmtWithTaxExcludedMandatoryTax, Original_TotalRentPerMonth, Original_LevelID, Original_IsModified, Original_ModifiedDate, Original_IsPerDay, Original_NosDay, Original_MandatoryTaxCode, Original_OtherServiceID, Original_ContractName, Original_SAP_CompanyCode, Original_SAP_PstnDateInDoc, Original_SAP_DocHeaderText, Original_SAP_DocType, Original_SAP_RefKey1, Original_SAP_RefKey2, Original_SAP_RefKey3, Original_SAP_Assignment, Original_SAP_PostingKey, Original_SAP_GLACC, Original_Is_SAPUploaded, Original_RentalDiscount, Original_SCDiscount, Original_InvoiceState, Original_IsProforma, Original_ProfomaNo, Original_ProfomaSequenceNo, Original_InvoiceID);
        }
    }
}

#pragma warning restore 1591